{"version":3,"file":"js/924.js","mappings":"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","sources":["webpack://x-sheet/./src/const/Constant.js","webpack://x-sheet/./src/core/table/XTableTextFormat.js","webpack://x-sheet/./src/core/table/tablecell/Border.js","webpack://x-sheet/./src/core/table/tablecell/Cell.js","webpack://x-sheet/./src/core/table/tablecell/CellBorder.js","webpack://x-sheet/./src/core/table/tablecell/CellFont.js","webpack://x-sheet/./src/core/table/tablecell/RichFont.js","webpack://x-sheet/./src/core/table/tablecell/RichFonts.js","webpack://x-sheet/./src/core/table/tableicon/XIcon.js","webpack://x-sheet/./src/core/table/tableicon/XIconOffset.js","webpack://x-sheet/./src/core/work/head/tool/Icon.js","webpack://x-sheet/./src/draw/Crop.js","webpack://x-sheet/./src/draw/Line.js","webpack://x-sheet/./src/draw/Rect.js","webpack://x-sheet/./src/draw/XDraw.js","webpack://x-sheet/./src/draw/font/BaseFont.js","webpack://x-sheet/./src/formula/Compiler.js","webpack://x-sheet/./src/formula/Formula.js","webpack://x-sheet/./src/lib/Element.js","webpack://x-sheet/./src/lib/Widget.js","webpack://x-sheet/./src/lib/XEvent.js","webpack://x-sheet/./src/module/colorpicker/ColorPicker.js","webpack://x-sheet/./src/module/colorpicker/colorarray/ColorArray.js","webpack://x-sheet/./src/module/colorpicker/colorarray/ColorItem.js","webpack://x-sheet/./src/module/dragpanel/DragPanel.js","webpack://x-sheet/./src/utils/DateUtils.js","webpack://x-sheet/./src/utils/SheetUtils.js"],"sourcesContent":["const cssPrefix = 'x-sheet';\nconst XSheetVersion = `${cssPrefix} 1.0.0-develop`;\nconst Constant = {};\nConstant.WORK_BODY_EVENT_TYPE = {\n  CHANGE_ACTIVE: 'changeactive',\n  REMOVE_SHEET: 'removesheet',\n};\nConstant.SYSTEM_EVENT_TYPE = {\n  MOUSE_MOVE: 'mousemove',\n  MOUSE_DOWN: 'mousedown',\n  CONTEXT_MENU: 'contextmenu',\n  SCROLL: 'scroll',\n  RESIZE: 'resize',\n  MOUSE_UP: 'mouseup',\n  INPUT: 'input',\n  KEY_DOWN: 'keydown',\n  KEY_UP: 'keyup',\n  MOUSE_OVER: 'mouseover',\n  MOUSE_LEAVE: 'mouseleave',\n  MOUSE_WHEEL: 'wheel',\n  MOUSE_ENTER: 'mouseenter',\n  CLICK: 'click',\n  FOCUS: 'focus',\n  BLUR: 'blur',\n  DRAG_START: 'dragstart',\n  CHANGE: 'change',\n  VISIBILITY_CHANGE: 'visibilitychange',\n};\nConstant.TABLE_EVENT_TYPE = {\n  RENDER: 'render',\n  SNAPSHOT_CHANGE: 'snapshotchange',\n  CHANGE_ROW_HEIGHT: 'changerowheight',\n  CHANGE_COL_WIDTH: 'changecolwidth',\n  SCALE_CHANGE: 'scalechange',\n  EDIT_START: 'editstart',\n  EDIT_INPUT: 'editinput',\n  EDIT_FINISH: 'editfinish',\n  REMOVE_ROW: 'removerow',\n  REMOVE_COL: 'removecol',\n  ADD_NEW_ROW: 'addnewrow',\n  ADD_NEW_COL: 'addnewcol',\n  FIXED_CHANGE: 'fixedchange',\n  FIXED_COL_CHANGE: 'fixedcolchange',\n  FIXED_ROW_CHANGE: 'fixedrowchange',\n  SELECT_OVER: 'selectover',\n  SELECT_DOWN: 'selectdown',\n  SELECT_CHANGE: 'selectchange',\n  DATA_CHANGE: 'datachange',\n  RESIZE_CHANGE: 'resizechange',\n};\nConstant.FORM_EVENT_TYPE = {\n  SEARCH_INPUT_CHANGE: 'searchinputchange',\n  PLAIN_INPUT_CHANGE: 'plaininputchange',\n  FORM_SELECT_CHANGE: 'formselectchange',\n};\nexport {\n  XSheetVersion,\n  Constant,\n  cssPrefix,\n};\n","import { SheetUtils } from '../../utils/SheetUtils';\nimport { DateUtils } from '../../utils/DateUtils';\n\nclass Format {\n\n  default(value) {\n    return this.text(value);\n  }\n\n  text(value) {\n    return value ? `${value}` : '';\n  }\n\n  // =============================数字==============================\n\n  number(value) {\n    return this.text(value);\n  }\n\n  fraction(value) {\n    if (SheetUtils.isFraction(value)) {\n      const left = value.split('/')[0];\n      const right = value.split('/')[1];\n      return this.text(SheetUtils.parseInt(left) / SheetUtils.parseInt(right));\n    }\n    return this.text(value);\n  }\n\n  eNotation(value) {\n    if (SheetUtils.isNumber(value)) {\n      const number = SheetUtils.parseFloat(value);\n      return number.toExponential(2);\n    }\n    return this.text(value);\n  }\n\n  decimal(value) {\n    if (SheetUtils.isNumber(value)) {\n      const indexOf = value.toString().indexOf('.');\n      if (indexOf !== -1) {\n        return value.toString().substring(0, indexOf + 3);\n      }\n      return `${value}.00`;\n    }\n    return this.text(value);\n  }\n\n  percentage(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `${value}%`;\n    }\n    return this.text(value);\n  }\n\n  // =============================货币==============================\n\n  rmb(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `￥${value}`;\n    }\n    return this.text(value);\n  }\n\n  hk(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `HK${value}`;\n    }\n    return this.text(value);\n  }\n\n  dollar(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `$${value}`;\n    }\n    return this.text(value);\n  }\n\n  // =============================日期==============================\n\n  time(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('hh:mm:ss', result);\n    }\n    return this.text(value);\n  }\n\n  date1(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy/MM/dd', result);\n    }\n    return this.text(value);\n  }\n\n  date2(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('MM月dd日', result);\n    }\n    return this.text(value);\n  }\n\n  date3(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy年MM月', result);\n    }\n    return this.text(value);\n  }\n\n  date4(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy年MM月dd日', result);\n    }\n    return this.text(value);\n  }\n\n  date5(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy/MM/dd hh:mm:ss', result);\n    }\n    return this.text(value);\n  }\n\n}\n\nconst format = new Format();\n\nexport default (type, value) => format[type](value);\n","import { LINE_TYPE } from '../../../draw/Line';\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { XDraw } from '../../../draw/XDraw';\n\nlet zIndexID = 0;\n\n/**\n * Border\n * @author jerry\n */\nclass Border {\n\n  static getZIndex() {\n    zIndexID += 1;\n    return zIndexID;\n  }\n\n  constructor({\n    widthType = XDraw.LINE_WIDTH_TYPE.low,\n    type = LINE_TYPE.SOLID_LINE,\n    width = -1,\n    color = 'rgb(0,0,0)',\n    zIndex = 0,\n    display = false,\n  } = {}) {\n    this.zIndex = zIndex;\n    this.display = display;\n    this.color = color;\n    this.type = type;\n    if (width === 1) {\n      this.widthType = XDraw.LINE_WIDTH_TYPE.low;\n    } else if (width === 2) {\n      this.widthType = XDraw.LINE_WIDTH_TYPE.medium;\n    } else if (width === 3) {\n      this.widthType = XDraw.LINE_WIDTH_TYPE.high;\n    } else {\n      this.widthType = widthType;\n    }\n    if (zIndex > zIndexID) {\n      zIndexID = zIndex;\n    }\n  }\n\n  priority(border) {\n    if (SheetUtils.isUnDef(border)) {\n      return -2;\n    }\n    const origin = this.zIndex;\n    const target = border.zIndex;\n    if (origin > target) {\n      return 1;\n    }\n    if (target > origin) {\n      return -1;\n    }\n    return 0;\n  }\n\n  setColor(value) {\n    this.zIndex = Border.getZIndex();\n    this.color = value;\n  }\n\n  setDisplay(value) {\n    this.zIndex = Border.getZIndex();\n    this.display = value;\n  }\n\n  setType(value) {\n    this.zIndex = Border.getZIndex();\n    this.type = value;\n  }\n\n  setZIndex(value) {\n    this.zIndex = value;\n  }\n\n  setWidthType(value) {\n    this.zIndex = Border.getZIndex();\n    this.widthType = value;\n  }\n\n  clone() {\n    return new Border({\n      widthType: this.widthType,\n      color: this.color,\n      zIndex: this.zIndex,\n      type: this.type,\n      display: this.display,\n    });\n  }\n\n  equal(target) {\n    const widthType = this.widthType === target.widthType;\n    const color = this.color === target.color;\n    const type = this.type === target.type;\n    return color && widthType && type;\n  }\n\n}\n\nexport { Border };\n","import { SheetUtils } from '../../../utils/SheetUtils';\nimport { CellFont } from './CellFont';\nimport { CellBorder } from './CellBorder';\nimport { XIcon } from '../tableicon/XIcon';\nimport XTableFormat from '../XTableTextFormat';\nimport { RichFonts } from './RichFonts';\nimport { Formula } from '../../../formula/Formula';\nimport { DateUtils } from '../../../utils/DateUtils';\nimport { BaseFont } from '../../../draw/font/BaseFont';\n\n/**\n * 单元格\n */\nclass Cell {\n\n  /**\n   * Cell\n   * @param borderAttr\n   * @param fontAttr\n   * @param richText\n   * @param formula\n   * @param background\n   * @param text\n   * @param ruler\n   * @param contentWidth\n   * @param contentHeight\n   * @param format\n   * @param custom\n   * @param icons\n   * @param contentType\n   */\n  constructor({\n    borderAttr = SheetUtils.Undef,\n    fontAttr = SheetUtils.Undef,\n    richText = SheetUtils.Undef,\n    formula = SheetUtils.Undef,\n    background = SheetUtils.Undef,\n    text = SheetUtils.EMPTY,\n    custom = {},\n    icons = [],\n    ruler = SheetUtils.Undef,\n    contentWidth = 0,\n    contentHeight = 0,\n    format = 'default',\n    contentType = Cell.TYPE.STRING,\n  } = {}) {\n    // 背景颜色\n    this.background = background;\n    // 单元格图标\n    this.icons = XIcon.getInstance(icons);\n    // 自定义属性\n    this.custom = custom;\n    // 字体测量尺子\n    this.ruler = ruler;\n    // 格式化类型\n    this.format = format;\n    // 单元格公式\n    this.formula = Formula.getInstance(formula);\n    // 文本内容\n    this.text = text;\n    // 富文本内容\n    this.richText = RichFonts.getInstance(richText);\n    // 格式化后的内容\n    this.formatText = SheetUtils.EMPTY;\n    // 内容的宽度\n    this.contentWidth = contentWidth;\n    // 内容的高度\n    this.contentHeight = contentHeight;\n    // 字体属性\n    this.fontAttr = CellFont.getInstance(fontAttr);\n    // 边框属性\n    this.borderAttr = CellBorder.getInstance(borderAttr);\n    // 内容类型\n    this.setContentType(contentType);\n  }\n\n  /**\n   * 设置单元格小图标\n   * @param icons\n   */\n  setIcons(icons) {\n    this.icons = icons;\n    return this;\n  }\n\n  /**\n   * 设置内容文本\n   * @param text\n   */\n  setText(text) {\n    this.formatText = null;\n    this.text = text;\n    this.formula.setExpr(null);\n    this.richText.setRich([]);\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置富文本\n   */\n  setRichText(rich) {\n    this.formatText = null;\n    this.text = null;\n    this.formula.setExpr(null);\n    this.richText.setRich(rich);\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置公式\n   */\n  setExpr(expr) {\n    this.formatText = null;\n    this.text = null;\n    this.formula.setExpr(expr);\n    this.richText.setRich([]);\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 获取公式\n   */\n  getExpr() {\n    return this.formula.getExpr();\n  }\n\n  /**\n   * 设置格式化类型\n   * @param format\n   */\n  setFormat(format = 'default') {\n    this.format = format;\n    this.formatText = null;\n    this.setContentWidth(0);\n    return this;\n  }\n\n  /**\n   * 保存测量尺子\n   * @param ruler\n   */\n  setRuler(ruler) {\n    this.ruler = ruler;\n    return this;\n  }\n\n  /**\n   * 设置内容类型\n   * @param type\n   */\n  setContentType(type = Cell.TYPE.STRING) {\n    const { text } = this;\n    switch (type) {\n      case Cell.TYPE.STRING: {\n        this.contentType = Cell.TYPE.STRING;\n        break;\n      }\n      case Cell.TYPE.NUMBER: {\n        this.contentType = type;\n        if (SheetUtils.isNumber(text)) {\n          this.contentType = Cell.TYPE.NUMBER;\n          this.text = SheetUtils.parseFloat(text);\n        } else {\n          this.contentType = Cell.TYPE.STRING;\n          this.text = `${text}`;\n        }\n        break;\n      }\n      case Cell.TYPE.DATE_TIME: {\n        const parse = DateUtils.parse(text);\n        if (SheetUtils.isDate(parse)) {\n          this.contentType = Cell.TYPE.DATE_TIME;\n          this.text = text;\n        } else {\n          this.contentType = Cell.TYPE.STRING;\n          this.text = `${text}`;\n        }\n        break;\n      }\n      case Cell.TYPE.RICH_TEXT: {\n        this.contentType = Cell.TYPE.RICH_TEXT;\n        break;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 单元格是否为空\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return SheetUtils.isBlank(this.getComputeText());\n  }\n\n  /**\n   * 公式是否存在\n   */\n  hasFormula() {\n    return this.formula.hasExpr();\n  }\n\n  /**\n   * 获取格式后的文本\n   * @returns {string|*}\n   */\n  getFormatText() {\n    let {\n      text,\n      formula,\n      format,\n    } = this;\n    let { formatText } = this;\n    let { contentType } = this;\n    // 优先获取公式值\n    if (formula.hasExpr()) {\n      let value = formula.getValue();\n      if (value) {\n        if (SheetUtils.isBlank(formatText)) {\n          formatText = XTableFormat(format, value);\n        }\n      }\n      this.formatText = formatText;\n      return formatText;\n    }\n    // 格式化文本\n    switch (contentType) {\n      case Cell.TYPE.STRING:\n      case Cell.TYPE.NUMBER:\n      case Cell.TYPE.DATE_TIME: {\n        if (format) {\n          if (SheetUtils.isBlank(formatText)) {\n            this.formatText = XTableFormat(format, text);\n            return this.formatText;\n          }\n        }\n        return formatText;\n      }\n    }\n    // 默认返回\n    return SheetUtils.EMPTY;\n  }\n\n  /**\n   * 获取计算后的文本\n   * @returns {string|*}\n   */\n  getComputeText() {\n    let { text, formula } = this;\n    let { richText } = this;\n    let { contentType } = this;\n    // 优先获取公式值\n    if (formula.hasExpr()) {\n      return formula.getValue();\n    }\n    // 读取不同类型\n    switch (contentType) {\n      case Cell.TYPE.STRING:\n      case Cell.TYPE.NUMBER:\n      case Cell.TYPE.DATE_TIME: {\n        return text;\n      }\n      case Cell.TYPE.RICH_TEXT: {\n        return richText;\n      }\n    }\n    // 默认返回\n    return SheetUtils.EMPTY;\n  }\n\n  /**\n   * 字体属性\n   * @param attr\n   */\n  setFontAttr(attr) {\n    this.fontAttr = attr;\n    return this;\n  }\n\n  /**\n   * 设置边框类型\n   * @param attr\n   */\n  setBorderAttr(attr) {\n    this.borderAttr = attr;\n    return this;\n  }\n\n  /**\n   * 复制单元格\n   * @returns {Cell}\n   */\n  clone() {\n    return new Cell(this);\n  }\n\n  /**\n   * 复制单元格样式\n   * @returns {Cell}\n   */\n  cloneStyle() {\n    return new Cell({\n      borderAttr: this.borderAttr,\n      fontAttr: this.fontAttr,\n      background: this.background,\n    });\n  }\n\n  /**\n   * toJSON\n   */\n  toJSON() {\n    const { background, text, format, custom } = this;\n    const { icons, contentType, formula } = this;\n    const { richText, fontAttr, borderAttr } = this;\n    return {\n      custom,\n      richText,\n      formula,\n      contentType,\n      text,\n      icons,\n      background,\n      format,\n      fontAttr,\n      borderAttr,\n    };\n  }\n\n  /**\n   * toString\n   * @returns {string|*}\n   */\n  toString() {\n    return this.getFormatText();\n  }\n\n  /**\n   * 内容宽度\n   * @param width\n   */\n  setContentWidth(width) {\n    this.contentWidth = width;\n    return this;\n  }\n\n  /**\n   * 内容宽度\n   * @param height\n   */\n  setContentHeight(height) {\n    this.contentHeight = height;\n    return this;\n  }\n\n  /**\n   * 设置换行类型\n   * @param textWrap\n   */\n  setTextWrap(textWrap) {\n    this.fontAttr.textWrap = textWrap;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置字体颜色\n   * @param color\n   */\n  setFontColor(color) {\n    this.fontAttr.color = color;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置字体颜色\n   * @param color\n   */\n  setRichFontColor(color) {\n    this.richText.each((i) => {\n      i.color = color;\n    });\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置字体大小\n   * @param size\n   */\n  setFontSize(size) {\n    this.fontAttr.size = size;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置字体大小\n   * @param size\n   */\n  setRichFontSize(size) {\n    this.richText.each((i) => {\n      i.size = size;\n    });\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置字体加粗\n   * @param bold\n   */\n  setFontBold(bold) {\n    this.fontAttr.bold = bold;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置字体加粗\n   * @param bold\n   */\n  setRichFontBold(bold) {\n    this.richText.each((i) => {\n      i.bold = bold;\n    });\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置斜体字\n   * @param italic\n   */\n  setFontItalic(italic) {\n    this.fontAttr.italic = italic;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置斜体字\n   * @param italic\n   */\n  setRichFontItalic(italic) {\n    this.richText.each((i) => {\n      i.italic = italic;\n    });\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置字体名称\n   * @param name\n   */\n  setFontName(name) {\n    this.fontAttr.name = name;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置字体名称\n   * @param name\n   */\n  setRichFontName(name) {\n    this.richText.each((i) => {\n      i.name = name;\n    });\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置下划线\n   * @param underline\n   */\n  setUnderLine(underline) {\n    this.fontAttr.underline = underline;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置下划线\n   * @param underline\n   */\n  setRichUnderLine(underline) {\n    this.richText.each((i) => {\n      i.underline = underline;\n    });\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置删除线\n   * @param strikeline\n   */\n  setStrikeLine(strikeline) {\n    this.fontAttr.strikethrough = strikeline;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置删除线\n   * @param strikeline\n   */\n  setRichStrikeLine(strikeline) {\n    this.richText.each((i) => {\n      i.strikethrough = strikeline;\n    });\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置字体旋转角度\n   * @param number\n   */\n  setFontAngle(number) {\n    if (number === 0) {\n      this.fontAttr.angle = number;\n      this.fontAttr.direction = BaseFont.TEXT_DIRECTION.HORIZONTAL;\n    } else {\n      this.borderAttr.updateMaxIndex();\n      this.fontAttr.angle = number;\n      this.fontAttr.direction = BaseFont.TEXT_DIRECTION.ANGLE;\n    }\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置字体方向\n   * @param direction\n   */\n  setFontDirection(direction) {\n    this.fontAttr.angle = 0;\n    this.fontAttr.direction = direction;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置背景\n   */\n  setBackground(background) {\n    this.background = background;\n    return this;\n  }\n\n  /**\n   * 设置字体水平对齐\n   * @param align\n   */\n  setFontAlign(align) {\n    this.fontAttr.align = align;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n  /**\n   * 设置垂直对齐\n   * @param verticalAlign\n   */\n  setFontVerticalAlign(verticalAlign) {\n    this.fontAttr.verticalAlign = verticalAlign;\n    this.setRuler(null);\n    this.setContentWidth(0);\n    this.setContentHeight(0);\n    return this;\n  }\n\n}\n\n/**\n * 单元格类型\n */\nCell.TYPE = {\n  // 数字\n  NUMBER: 0,\n  // 字符\n  STRING: 1,\n  // 富文本\n  RICH_TEXT: 2,\n  // 日期\n  DATE_TIME: 3,\n};\n\nexport {\n  Cell,\n};\n","import { Border } from './Border';\nimport { LINE_TYPE } from '../../../draw/Line';\n\n/**\n * CellBorder\n * @author jerry\n */\nclass CellBorder {\n\n  /**\n   * CellBorder\n   * @param time\n   * @param left\n   * @param top\n   * @param right\n   * @param bottom\n   */\n  constructor({\n    left = {},\n    bottom = {},\n    top = {},\n    right = {},\n  } = {}) {\n    this.left = new Border(left);\n    this.bottom = new Border(bottom);\n    this.top = new Border(top);\n    this.right = new Border(right);\n  }\n\n  hasDouble() {\n    const { top, left, right, bottom } = this;\n    if (top.type === LINE_TYPE.DOUBLE_LINE) {\n      return true;\n    }\n    if (left.type === LINE_TYPE.DOUBLE_LINE) {\n      return true;\n    }\n    if (right.type === LINE_TYPE.DOUBLE_LINE) {\n      return true;\n    }\n    return bottom.type === LINE_TYPE.DOUBLE_LINE;\n  }\n\n  isDisplay() {\n    return this.left.display || this.top.display\n      || this.bottom.display || this.right.display;\n  }\n\n  setAllDisplay(display) {\n    this.setBDisplay(display);\n    this.setLDisplay(display);\n    this.setTDisplay(display);\n    this.setRDisplay(display);\n  }\n\n  setLDisplay(display) {\n    this.left.setDisplay(display);\n  }\n\n  setTDisplay(display) {\n    this.top.setDisplay(display);\n  }\n\n  setRDisplay(display) {\n    this.right.setDisplay(display);\n  }\n\n  setBDisplay(display) {\n    this.bottom.setDisplay(display);\n  }\n\n  setAllColor(color) {\n    this.setBColor(color);\n    this.setLColor(color);\n    this.setTColor(color);\n    this.setRColor(color);\n  }\n\n  setLColor(color) {\n    this.left.setColor(color);\n  }\n\n  setTColor(color) {\n    this.top.setColor(color);\n  }\n\n  setRColor(color) {\n    this.right.setColor(color);\n  }\n\n  setBColor(color) {\n    this.bottom.setColor(color);\n  }\n\n  setAllWidthType(widthType) {\n    this.setBWidthType(widthType);\n    this.setLWidthType(widthType);\n    this.setTWidthType(widthType);\n    this.setRWidthType(widthType);\n  }\n\n  setLWidthType(widthType) {\n    this.left.setWidthType(widthType);\n  }\n\n  setTWidthType(widthType) {\n    this.top.setWidthType(widthType);\n  }\n\n  setRWidthType(widthType) {\n    this.right.setWidthType(widthType);\n  }\n\n  setBWidthType(widthType) {\n    this.bottom.setWidthType(widthType);\n  }\n\n  setAllType(type) {\n    this.setBType(type);\n    this.setLType(type);\n    this.setTType(type);\n    this.setRType(type);\n  }\n\n  setLType(type) {\n    this.left.setType(type);\n  }\n\n  setTType(type) {\n    this.top.setType(type);\n  }\n\n  setRType(type) {\n    this.right.setType(type);\n  }\n\n  setBType(type) {\n    this.bottom.setType(type);\n  }\n\n  updateMaxIndex() {\n    const zIndex = Border.getZIndex();\n    this.left.setZIndex(zIndex);\n    this.bottom.setZIndex(zIndex);\n    this.top.setZIndex(zIndex);\n    this.right.setZIndex(zIndex);\n  }\n\n  clone() {\n    const { left, top, right, bottom } = this;\n    return new CellBorder({\n      left: left.clone(),\n      top: top.clone(),\n      right: right.clone(),\n      bottom: bottom.clone(),\n    });\n  }\n\n}\n\nCellBorder.EMPTY = new CellBorder();\n\nCellBorder.getInstance = (config) => {\n  if (config) {\n    return new CellBorder(config);\n  }\n  return CellBorder.EMPTY;\n};\n\nexport { CellBorder };\n","import { BaseFont } from '../../../draw/font/BaseFont';\nimport { ColorArray } from '../../../module/colorpicker/colorarray/ColorArray';\nimport { SheetUtils } from '../../../utils/SheetUtils';\n\n/**\n *  CellFont\n *  @author jerry\n */\nclass CellFont {\n\n  /**\n   * CellFont\n   * @param align\n   * @param verticalAlign\n   * @param textWrap\n   * @param strikethrough\n   * @param underline\n   * @param color\n   * @param name\n   * @param size\n   * @param bold\n   * @param italic\n   * @param angle\n   * @param direction\n   * @param padding\n   */\n  constructor({\n    align = BaseFont.ALIGN.left,\n    verticalAlign = BaseFont.VERTICAL_ALIGN.center,\n    textWrap = BaseFont.TEXT_WRAP.TRUNCATE,\n    strikethrough = false,\n    underline = false,\n    color = ColorArray.BLACK,\n    name = 'Arial',\n    size = 14,\n    bold = false,\n    italic = false,\n    angle = 0,\n    direction = BaseFont.TEXT_DIRECTION.HORIZONTAL,\n    padding = 5,\n  } = {}) {\n    this.align = align;\n    this.verticalAlign = verticalAlign;\n    this.textWrap = textWrap;\n    this.strikethrough = strikethrough;\n    this.underline = underline;\n    this.color = color;\n    this.name = name;\n    this.size = size;\n    this.bold = bold;\n    this.italic = italic;\n    this.direction = direction;\n    this.angle = angle;\n    this.padding = padding;\n  }\n\n  like(other) {\n    let keys1 = Object.keys(this);\n    let keys2 = Object.keys(other);\n    for (let key of keys2) {\n      if (!keys1.includes(key)) {\n        return false;\n      }\n    }\n    for (let key of keys2) {\n      let src = this[key];\n      let val = other[key];\n      switch (key) {\n        case 'color': {\n          src = SheetUtils.clearBlank(src);\n          val = SheetUtils.clearBlank(val);\n          break;\n        }\n      }\n      if (src !== val) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  clone() {\n    const {\n      align,\n      verticalAlign,\n      textWrap,\n      strikethrough,\n      underline,\n      color,\n      name,\n      size,\n      bold,\n      italic,\n      angle,\n      direction,\n      padding,\n    } = this;\n    return new CellFont({\n      align,\n      verticalAlign,\n      textWrap,\n      strikethrough,\n      underline,\n      color,\n      name,\n      size,\n      bold,\n      italic,\n      angle,\n      direction,\n      padding,\n    });\n  }\n\n  reset() {\n    this.align = BaseFont.ALIGN.left;\n    this.verticalAlign = BaseFont.VERTICAL_ALIGN.center;\n    this.textWrap = BaseFont.TEXT_WRAP.TRUNCATE;\n    this.strikethrough = false;\n    this.underline = false;\n    this.color = ColorArray.BLACK;\n    this.name = 'Arial';\n    this.size = 14;\n    this.bold = false;\n    this.italic = false;\n    this.angle = 0;\n    this.direction = BaseFont.TEXT_DIRECTION.HORIZONTAL;\n    this.padding = 5;\n  }\n\n  equals(other) {\n    let keys1 = Object.keys(this);\n    let keys2 = Object.keys(other);\n    for (let key of keys1) {\n      if (!keys2.includes(key)) {\n        return false;\n      }\n    }\n    for (let key of keys1) {\n      let src = this[key];\n      let val = other[key];\n      switch (key) {\n        case 'color': {\n          src = SheetUtils.clearBlank(src);\n          val = SheetUtils.clearBlank(val);\n          break;\n        }\n      }\n      if (src !== val) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\nCellFont.EMPTY = new CellFont();\n\nCellFont.getInstance = (config) => {\n  if (config) {\n    return new CellFont(config);\n  }\n  return CellFont.EMPTY;\n};\n\nexport { CellFont };\n","import { SheetUtils } from '../../../utils/SheetUtils';\nimport { ColorArray } from '../../../module/colorpicker/colorarray/ColorArray';\n\nclass RichFont {\n\n  constructor({\n    text = '',\n    color = ColorArray.BLACK,\n    name = 'Arial',\n    size = 14,\n    bold = false,\n    italic = false,\n    strikethrough = false,\n    underline = false,\n    scaleAdapter,\n  } = {}) {\n    this.color = color;\n    this.text = `${text}`;\n    this.name = name;\n    this.size = size;\n    this.italic = italic;\n    this.bold = bold;\n    this.strikethrough = strikethrough;\n    this.underline = underline;\n    this.scaleAdapter = scaleAdapter;\n  }\n\n  clone() {\n    const { text, color, name, size } = this;\n    const { italic, bold, underline } = this;\n    const { strikethrough, scaleAdapter } = this;\n    return new RichFont({\n      text, color, name, size, italic, bold, underline, strikethrough, scaleAdapter,\n    });\n  }\n\n  reset() {\n    this.color = ColorArray.BLACK;\n    this.name = 'Arial';\n    this.size = 14;\n    this.bold = false;\n    this.italic = false;\n    this.strikethrough = false;\n    this.underline = false;\n  }\n\n  plain(option = (v) => v) {\n    return option(this.clone());\n  }\n\n  like(other) {\n    let ignore = ['scaleAdapter'];\n    let keys1 = Object.keys(this);\n    let keys2 = Object.keys(other);\n    for (let key of keys2) {\n      if (ignore.includes(key)) {\n        continue;\n      }\n      if (!keys1.includes(key)) {\n        return false;\n      }\n    }\n    for (let key of keys2) {\n      if (ignore.includes(key)) {\n        continue;\n      }\n      let src = this[key];\n      let val = other[key];\n      switch (key) {\n        case 'color': {\n          src = SheetUtils.clearBlank(src);\n          val = SheetUtils.clearBlank(val);\n          break;\n        }\n      }\n      if (src !== val) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  equals(other) {\n    let ignore = ['scaleAdapter'];\n    let keys1 = Object.keys(this);\n    let keys2 = Object.keys(other);\n    for (let key of keys1) {\n      if (ignore.includes(key)) {\n        continue;\n      }\n      if (!keys2.includes(key)) {\n        return false;\n      }\n    }\n    for (let key of keys1) {\n      if (ignore.includes(key)) {\n        continue;\n      }\n      let src = this[key];\n      let val = other[key];\n      switch (key) {\n        case 'color': {\n          src = SheetUtils.clearBlank(src);\n          val = SheetUtils.clearBlank(val);\n          break;\n        }\n      }\n      if (src !== val) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\nexport {\n  RichFont,\n};\n","import { RichFont } from './RichFont';\nimport { SheetUtils } from '../../../utils/SheetUtils';\n\nclass RichFonts {\n\n  constructor({\n    rich = [],\n  } = {}) {\n    this.rich = rich.map((font) => new RichFont(font));\n  }\n\n  setRich(rich = []) {\n    this.rich = rich;\n  }\n\n  each(cb = () => {}) {\n    this.rich.forEach((font) => {\n      cb(font);\n    });\n  }\n\n  reset() {\n    this.each((i) => {\n      i.reset();\n    });\n  }\n\n  getRich() {\n    return this.rich;\n  }\n\n  clone() {\n    const rich = [];\n    this.rich.forEach((font) => {\n      rich.push(font.clone());\n    });\n    return new RichFonts({\n      rich,\n    });\n  }\n\n  hasLength() {\n    return this.rich.length > 0;\n  }\n\n  plain(option) {\n    const result = [];\n    this.rich.forEach((font) => {\n      result.push(font.plain(option));\n    });\n    return result;\n  }\n\n  like(other) {\n    if (SheetUtils.isUnDef(other)) {\n      return false;\n    }\n    if (other.rich.length !== this.rich.length) {\n      return false;\n    }\n    for (let i = 0; i < this.rich.length; i++) {\n      let item1 = this.rich[i];\n      let item2 = other.rich[i];\n      if (!item1.like(item2)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  toString() {\n    let text = [];\n    this.each((i) => text.push(i.text));\n    return text.join('');\n  }\n\n  equals(other) {\n    if (SheetUtils.isUnDef(other)) {\n      return false;\n    }\n    if (other.rich.length !== this.rich.length) {\n      return false;\n    }\n    for (let i = 0; i < this.rich.length; i++) {\n      let item1 = this.rich[i];\n      let item2 = other.rich[i];\n      if (!item1.equals(item2)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\nRichFonts.EMPTY = new RichFonts();\n\nRichFonts.getInstance = (config) => {\n  if (config) {\n    return new RichFonts(config);\n  }\n  return RichFonts.EMPTY;\n};\n\nexport {\n  RichFonts,\n};\n","/* global Image */\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { XDraw } from '../../../draw/XDraw';\nimport { Rect } from '../../../draw/Rect';\nimport { XIconOffset } from './XIconOffset';\nimport { Crop } from '../../../draw/Crop';\n\n/**\n * XIcon\n * @author jerry\n * @date 2020/10/20\n */\nclass XIcon {\n\n  /**\n   * 多图标初始化\n   * @param icons\n   * @returns {[]}\n   */\n  static newInstances(icons = []) {\n    const instances = [];\n    for (let i = 0; i < icons.length; i += 1) {\n      const icon = icons[i];\n      instances.push(new XIcon(icon));\n    }\n    return instances;\n  }\n\n  /**\n   * XIcon\n   * @param vertical\n   * @param horizontal\n   * @param type\n   * @param image\n   * @param focus\n   * @param height\n   * @param width\n   * @param color\n   * @param offset\n   * @param onDraw\n   * @param onLeave\n   * @param onMove\n   * @param onDown\n   * @param onEnter\n   */\n  constructor({\n    vertical = XIcon.ICON_VERTICAL.CENTER,\n    horizontal = XIcon.ICON_HORIZONTAL.RIGHT,\n    type = XIcon.ICON_TYPE.image,\n    image = SheetUtils.Nul,\n    iconFocus = null,\n    height = 16,\n    width = 16,\n    color = 'rgb(255,255,255)',\n    offset = { x: 0, y: 0 },\n    onDraw = () => {},\n    onLeave = () => {},\n    onMove = () => {},\n    onDown = () => {},\n    onEnter = () => {},\n  }) {\n    this.vertical = vertical;\n    this.horizontal = horizontal;\n    this.width = width;\n    this.height = height;\n    this.type = type;\n    this.image = image;\n    this.color = color;\n    this.iconFocus = iconFocus;\n    this.offset = new XIconOffset(offset);\n    this.onLeave = onLeave;\n    this.onMove = onMove;\n    this.onDraw = onDraw;\n    this.onDown = onDown;\n    this.onEnter = onEnter;\n    this.rect = null;\n  }\n\n  /**\n   * 计算绘制坐标\n   * @param rect\n   * @returns {{x: number, y: number}}\n   */\n  position(rect) {\n    // 图标信息\n    const iconHorizontal = this.horizontal;\n    const iconVertical = this.vertical;\n    const iconOffsetX = XDraw.stylePx(this.offset.x);\n    const iconOffsetY = XDraw.stylePx(this.offset.y);\n    const iconWidth = XDraw.stylePx(this.width);\n    const iconHeight = XDraw.stylePx(this.height);\n    // 矩形位置\n    const rectX = rect.x;\n    const rectY = rect.y;\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n    // 计算位置\n    let px = 0;\n    let py = 0;\n    switch (iconHorizontal) {\n      case XIcon.ICON_HORIZONTAL.CENTER:\n        px = (rectX + rectWidth / 2) - (iconWidth / 2);\n        break;\n      case XIcon.ICON_HORIZONTAL.LEFT:\n        px = rectX;\n        break;\n      case XIcon.ICON_HORIZONTAL.RIGHT:\n        px = rectX + rectWidth - iconWidth;\n        break;\n    }\n    switch (iconVertical) {\n      case XIcon.ICON_VERTICAL.CENTER:\n        py = (rectY + rectHeight / 2) - (iconHeight / 2);\n        break;\n      case XIcon.ICON_VERTICAL.TOP:\n        py = rectY;\n        break;\n      case XIcon.ICON_VERTICAL.BOTTOM:\n        py = rectY + rectHeight - iconHeight;\n        break;\n    }\n    px += iconOffsetX;\n    py += iconOffsetY;\n    return new Rect({\n      x: px, y: py, width: iconWidth, height: iconHeight,\n    });\n  }\n\n  /**\n   * 加载图片信息\n   * @param async\n   * @param sync\n   */\n  loadImage({\n    load, sync,\n  }) {\n    const { image, type } = this;\n    switch (type) {\n      case XIcon.ICON_TYPE.image:\n        if (image instanceof Image) {\n          sync(image);\n        } else {\n          const loadImg = new Image();\n          loadImg.src = image;\n          if (loadImg.complete) {\n            this.image = loadImg;\n            sync(this.image);\n          } else {\n            loadImg.onload = () => {\n              this.image = loadImg;\n              load(loadImg);\n            };\n            loadImg.onerror = () => {\n              // eslint-disable-next-line no-console\n              console.error(`图片加载失败${image}`);\n            };\n          }\n        }\n        break;\n      case XIcon.ICON_TYPE.draw:\n        sync();\n        break;\n    }\n  }\n\n  /**\n   * 绘制小图标\n   * @param rect\n   * @param draw\n   */\n  drawIcon({\n    rect, draw,\n  }) {\n    const { type } = this;\n    this.rect = rect;\n    switch (type) {\n      case XIcon.ICON_TYPE.image:\n        this.drawImage({\n          rect, draw,\n        });\n        break;\n      case XIcon.ICON_TYPE.draw:\n        this.drawCustom({\n          rect, draw,\n        });\n        break;\n    }\n  }\n\n  /**\n   * 自定义绘制\n   * @param rect\n   * @param icon\n   * @param draw\n   */\n  drawCustom({\n    rect, draw,\n  }) {\n    this.onDraw({\n      rect, draw,\n    });\n  }\n\n  /**\n   * 绘制图片\n   * @param rect\n   * @param icon\n   * @param draw\n   */\n  drawImage({\n    rect, draw,\n  }) {\n    const image = this.image;\n    const color = this.color;\n    const positionRect = this.position(rect);\n    const {\n      x, y, width, height,\n    } = positionRect;\n    const include = rect.includeRect(positionRect);\n    const crop = new Crop({\n      rect, draw,\n    });\n    if (include === false) {\n      crop.open();\n    }\n    if (color) {\n      draw.attr({ fillStyle: color });\n      draw.fillRect(x, y, width, height);\n    }\n    draw.drawImage(image, 0, 0, image.width, image.height, x, y, width, height);\n    if (include === false) {\n      crop.close();\n    }\n  }\n\n  /**\n   * 事件处理\n   * @param type\n   * @param x\n   * @param y\n   * @param native\n   */\n  eventHandle({\n    type, x, y, native,\n  }) {\n    const { rect, iconFocus } = this;\n    if (rect) {\n      const position = this.position(rect);\n      const location = position.inRectPosition(rect);\n      const { activate } = iconFocus;\n      switch (type) {\n        case XIcon.ICON_EVENT_TYPE.MOUSE_DOWN:\n          if (location.includePoint(x, y)) {\n            iconFocus.setActivate(this);\n            this.onDown({\n              native, position,\n            });\n          }\n          break;\n        case XIcon.ICON_EVENT_TYPE.MOUSE_MOVE:\n          if (location.includePoint(x, y)) {\n            if (activate !== this) {\n              this.onEnter({\n                native, position,\n              });\n            }\n            iconFocus.setActivate(this);\n            this.onMove({\n              native, position,\n            });\n          } else if (activate) {\n            iconFocus.setActivate(null);\n            this.onLeave({\n              native, position,\n            });\n          }\n          break;\n      }\n    }\n  }\n\n  /**\n   * 绘制回调\n   * @param callback\n   */\n  setOnDraw(callback) {\n    this.onDraw = callback;\n  }\n\n  /**\n   * 按下回调\n   * @param callback\n   */\n  setOnDown(callback) {\n    this.onDown = callback;\n  }\n\n  /**\n   * 移动回调\n   * @param callback\n   */\n  setOnMove(callback) {\n    this.onMove = callback;\n  }\n\n  /**\n   * 进入回调\n   * @param callback\n   */\n  setOnEnter(callback) {\n    this.onEnter = callback;\n  }\n\n  /**\n   * 离开回调\n   * @param callback\n   */\n  setOnLeave(callback) {\n    this.onLeave = callback;\n  }\n\n  /**\n   * 设置焦点元素\n   * @param iconFocus\n   */\n  setFocus(iconFocus) {\n    this.iconFocus = iconFocus;\n  }\n\n}\n\nXIcon.ICON_HORIZONTAL = {\n  LEFT: 0,\n  RIGHT: 1,\n  CENTER: 2,\n};\nXIcon.ICON_VERTICAL = {\n  TOP: 3,\n  BOTTOM: 4,\n  CENTER: 5,\n};\nXIcon.ICON_TYPE = {\n  image: 1,\n  custom: 2,\n};\nXIcon.ICON_EVENT_TYPE = {\n  MOUSE_DOWN: 1,\n  MOUSE_MOVE: 2,\n};\n\nXIcon.EMPTY = [];\nXIcon.getInstance = (config) => {\n  if (config) {\n    return XIcon.newInstances(config);\n  }\n  return XIcon.EMPTY;\n};\n\nexport { XIcon };\n","/**\n * XIconOffset\n */\nclass XIconOffset {\n\n  /**\n   * XIconOffset\n   * @param x\n   * @param y\n   */\n  constructor({ x = 0, y = 0 } = {}) {\n    this.x = x;\n    this.y = y;\n  }\n\n}\n\nexport {\n  XIconOffset,\n};\n","import { Widget } from '../../../../lib/Widget';\nimport { cssPrefix } from '../../../../const/Constant';\nimport { h } from '../../../../lib/Element';\n\nclass Icon extends Widget {\n\n  constructor(className = '') {\n    super(`${cssPrefix}-icon`);\n    this.iconNameEl = h('div', `${cssPrefix}-icon-img ${className}`);\n    this.childrenNodes(this.iconNameEl);\n  }\n\n  setWidth(width) {\n    this.iconNameEl.css('width', `${width}px`);\n  }\n\n  setHeight(height) {\n    this.iconNameEl.css('height', `${height}px`);\n  }\n\n}\n\nexport { Icon };\n","class Crop {\n\n  constructor({\n    rect, draw, offset = 0,\n  }) {\n    this.rect = rect;\n    this.draw = draw;\n    this.offset = offset;\n  }\n\n  open() {\n    const {\n      rect, draw, offset,\n    } = this;\n    const {\n      x, y, width, height,\n    } = rect;\n    draw.save()\n      .rect(x, y, width + offset, height + offset)\n      .clip()\n      .beginPath();\n    return this;\n  }\n\n  close() {\n    const { draw } = this;\n    draw.restore();\n    return this;\n  }\n\n}\n\nexport { Crop };\n","import { SheetUtils } from '../utils/SheetUtils';\nimport { XDraw } from './XDraw';\n\nconst LINE_TYPE = {\n  SOLID_LINE: 0,\n  DOTTED_LINE: 1,\n  POINT_LINE: 2,\n  DOUBLE_LINE: 3,\n};\n\nclass SolidLine {\n\n  constructor(draw, attr) {\n    this.draw = draw;\n    SheetUtils.copy(this, {\n      color: 'rgb(0,0,0)',\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\n    }, attr);\n  }\n\n  setWidthType(widthType) {\n    this.widthType = widthType;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  horizonLine(sx, sy, ex, ey) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    draw.horizonLine([sx, sy], [ex, ey]);\n  }\n\n  verticalLine(sx, sy, ex, ey) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    draw.verticalLine([sx, sy], [ex, ey]);\n  }\n\n  tiltingLine(sx, sy, ex, ey) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    draw.corsLine([sx, sy], [ex, ey]);\n  }\n\n}\n\nclass DottedLine {\n\n  constructor(draw, attr) {\n    this.draw = draw;\n    SheetUtils.copy(this, {\n      color: 'rgb(0,0,0)',\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\n      dash: [5],\n    }, attr);\n  }\n\n  setWidthType(widthType) {\n    this.widthType = widthType;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  horizonLine(sx, sy, ex, ey) {\n    const { draw, dash } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash(dash);\n    draw.horizonLine([sx, sy], [ex, ey]);\n  }\n\n  verticalLine(sx, sy, ex, ey) {\n    const { draw, dash } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash(dash);\n    draw.verticalLine([sx, sy], [ex, ey]);\n  }\n\n  tiltingLine(sx, sy, ex, ey) {\n    const { draw, dash } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash(dash);\n    draw.corsLine([sx, sy], [ex, ey]);\n  }\n\n}\n\nclass DoubleLine {\n\n  constructor(draw, attr) {\n    this.draw = draw;\n    SheetUtils.copy(this, {\n      color: 'rgb(0,0,0)',\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\n      padding: 1,\n      spacing: DoubleLine.spacing,\n      leftShow: () => false,\n      topShow: () => false,\n      rightShow: () => false,\n      bottomShow: () => false,\n      iFMerge: () => false,\n      iFMergeFirstRow: () => false,\n      iFMergeLastRow: () => false,\n      iFMergeFirstCol: () => false,\n      iFMergeLastCol: () => false,\n    }, attr);\n  }\n\n  setWidthType(widthType) {\n    this.widthType = widthType;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  handleExternal(sx, sy, ex, ey, row, col, pos) {\n    const external = {};\n    const { leftShow, topShow, rightShow, bottomShow } = this;\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\n    const { spacing } = this;\n    let ifMerge = null;\n    let firstRow = null;\n    let lastRow = null;\n    let firstCol = null;\n    let lastCol = null;\n    switch (pos) {\n      case 'left':\n        ifMerge = iFMerge(row, col - 1);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row, col - 1);\n          lastRow = iFMergeLastRow(row, col - 1);\n          firstCol = iFMergeFirstCol(row, col - 1);\n          lastCol = iFMergeLastCol(row, col - 1);\n        }\n        break;\n      case 'top':\n        ifMerge = iFMerge(row - 1, col);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row - 1, col);\n          lastRow = iFMergeLastRow(row - 1, col);\n          firstCol = iFMergeFirstCol(row - 1, col);\n          lastCol = iFMergeLastCol(row - 1, col);\n        }\n        break;\n      case 'right':\n        ifMerge = iFMerge(row, col + 1);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row, col + 1);\n          lastRow = iFMergeLastRow(row, col + 1);\n          firstCol = iFMergeFirstCol(row, col + 1);\n          lastCol = iFMergeLastCol(row, col + 1);\n        }\n        break;\n      case 'bottom':\n        ifMerge = iFMerge(row + 1, col);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row + 1, col);\n          lastRow = iFMergeLastRow(row + 1, col);\n          firstCol = iFMergeFirstCol(row + 1, col);\n          lastCol = iFMergeLastCol(row + 1, col);\n        }\n        break;\n      default: break;\n    }\n    if (ifMerge) {\n      switch (pos) {\n        case 'left': {\n          external.sx = sx - spacing;\n          external.ex = ex - spacing;\n          // 检查顶边和上底边及左上角底边及左顶边\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          external.sy = sy;\n          if (sTop || sBottom) external.sy = sy - spacing;\n          if (sTopLeftCorner && firstRow) external.sy = sy + spacing;\n          // 检查底边和下顶边及左下角顶边和左底边\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          external.ey = ey;\n          if (eBottom || eTop) external.ey = ey + spacing;\n          if (eBottomLeftCorner && lastRow) external.ey = ey - spacing;\n          break;\n        }\n        case 'top': {\n          external.sy = sy - spacing;\n          external.ey = ey - spacing;\n          // 检查左边和左右边及左上角右边及上左边\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          external.sx = sx;\n          if (sLeft || sRight) external.sx = sx - spacing;\n          if (sTopLeftCorner && firstCol) external.sx = sx + spacing;\n          // 检查右边和右左边及右上角左边及上右边\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          external.ex = ex;\n          if (eRight || eLeft) external.ex = ex + spacing;\n          if (eTopRightCorner && lastCol) external.ex = ex - spacing;\n          break;\n        }\n        case 'right': {\n          external.sx = sx + spacing;\n          external.ex = ex + spacing;\n          // 检查顶边和上底边及右上角底边及右顶边\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          external.sy = sy;\n          if (sTop || sBottom) external.sy = sy - spacing;\n          if (sTopRightCorner && firstRow) external.sy = sy + spacing;\n          // 检查底边和下顶边及右下角顶边及右底边\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          external.ey = ey;\n          if (eBottom || eTop) external.ey = ey + spacing;\n          if (eBottomRightCorner && lastRow) external.ey = ey - spacing;\n          break;\n        }\n        case 'bottom': {\n          external.sy = sy + spacing;\n          external.ey = ey + spacing;\n          // 检查左边和左右边及左下角右边及下左边\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          external.sx = sx;\n          if (sLeft || sRight) external.sx = sx - spacing;\n          if (sBottomLeftCorner && firstCol) external.sx = sx + spacing;\n          // 检查右边和右左边及右下角左边及下右边\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          external.ex = ex;\n          if (eRight || eLeft) external.ex = ex + spacing;\n          if (eBottomRightCorner && lastCol) external.ex = ex - spacing;\n          break;\n        }\n        default: break;\n      }\n      return external;\n    }\n    switch (pos) {\n      case 'left': {\n        external.sx = sx - spacing;\n        external.ex = ex - spacing;\n        // 检查顶边和上底边及左上角底边及左顶边\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        external.sy = sy;\n        if (sTop || sBottom) external.sy = sy - spacing;\n        if (sTopLeftCorner) external.sy = sy + spacing;\n        // 检查底边和下顶边及左下角顶边和左底边\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        external.ey = ey;\n        if (eBottom || eTop) external.ey = ey + spacing;\n        if (eBottomLeftCorner) external.ey = ey - spacing;\n        break;\n      }\n      case 'top': {\n        external.sy = sy - spacing;\n        external.ey = ey - spacing;\n        // 检查左边和左右边及左上角右边及上左边\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        external.sx = sx;\n        if (sLeft || sRight) external.sx = sx - spacing;\n        if (sTopLeftCorner) external.sx = sx + spacing;\n        // 检查右边和右左边及右上角左边及上右边\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        external.ex = ex;\n        if (eRight || eLeft) external.ex = ex + spacing;\n        if (eTopRightCorner) external.ex = ex - spacing;\n        break;\n      }\n      case 'right': {\n        external.sx = sx + spacing;\n        external.ex = ex + spacing;\n        // 检查顶边和上底边及右上角底边及右顶边\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        external.sy = sy;\n        if (sTop || sBottom) external.sy = sy - spacing;\n        if (sTopRightCorner) external.sy = sy + spacing;\n        // 检查底边和下顶边及右下角顶边及右底边\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        external.ey = ey;\n        if (eBottom || eTop) external.ey = ey + spacing;\n        if (eBottomRightCorner) external.ey = ey - spacing;\n        break;\n      }\n      case 'bottom': {\n        external.sy = sy + spacing;\n        external.ey = ey + spacing;\n        // 检查左边和左右边及左下角右边及下左边\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        external.sx = sx;\n        if (sLeft || sRight) external.sx = sx - spacing;\n        if (sBottomLeftCorner) external.sx = sx + spacing;\n        // 检查右边和右左边及右下角左边及下右边\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        external.ex = ex;\n        if (eRight || eLeft) external.ex = ex + spacing;\n        if (eBottomRightCorner) external.ex = ex - spacing;\n        break;\n      }\n      default: break;\n    }\n    return external;\n  }\n\n  handleInternal(sx, sy, ex, ey, row, col, pos) {\n    const internal = {};\n    const { leftShow, topShow, rightShow, bottomShow } = this;\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\n    const { spacing } = this;\n    const ifMerge = iFMerge(row, col);\n    // merge\n    if (ifMerge) {\n      const firstRow = iFMergeFirstRow(row, col);\n      const lastRow = iFMergeLastRow(row, col);\n      const firstCol = iFMergeFirstCol(row, col);\n      const lastCol = iFMergeLastCol(row, col);\n      switch (pos) {\n        case 'left': {\n          internal.sx = sx + spacing;\n          internal.ex = ex + spacing;\n          // 检查顶边和上底边及左上角底边及左顶边\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          internal.sy = sy;\n          if (sTopLeftCorner) internal.sy = sy - spacing;\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\n          // 检查底边和下顶边及左下角顶边和左底边\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          internal.ey = ey;\n          if (eBottomLeftCorner) internal.ey = ey + spacing;\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\n          break;\n        }\n        case 'top': {\n          internal.sy = sy + spacing;\n          internal.ey = ey + spacing;\n          // 检查左边和左右边及左上角右边及上左边\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          internal.sx = sx;\n          if (sTopLeftCorner) internal.sx = sx - spacing;\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\n          // 检查右边和右左边及右上角左边及上右边\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          internal.ex = ex;\n          if (eTopRightCorner) internal.ex = ex + spacing;\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\n          break;\n        }\n        case 'right': {\n          internal.sx = sx - spacing;\n          internal.ex = ex - spacing;\n          // 检查顶边和上底边及右上角底边及右上边\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          internal.sy = sy;\n          if (sTopRightCorner) internal.sy = sy - spacing;\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\n          // 检查底边和下顶边右下角顶边及右下边\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          internal.ey = ey;\n          if (eBottomRightCorner) internal.ey = ey + spacing;\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\n          break;\n        }\n        case 'bottom': {\n          internal.sy = sy - spacing;\n          internal.ey = ey - spacing;\n          // 检查左边和左右边及左下角右边及下左边\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          internal.sx = sx;\n          if (sBottomLeftCorner) internal.sx = sx - spacing;\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\n          // 检查右边和右左边及右下角左边及下右边\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          internal.ex = ex;\n          if (eBottomRightCorner) internal.ex = ex + spacing;\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\n          break;\n        }\n        default: break;\n      }\n      return internal;\n    }\n    switch (pos) {\n      case 'left': {\n        internal.sx = sx + spacing;\n        internal.ex = ex + spacing;\n        // 检查顶边和上底边及左上角底边及左顶边\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        internal.sy = sy;\n        if (sTopLeftCorner) internal.sy = sy - spacing;\n        if (sTop || sBottom) internal.sy = sy + spacing;\n        // 检查底边和下顶边及左下角顶边和左底边\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        internal.ey = ey;\n        if (eBottomLeftCorner) internal.ey = ey + spacing;\n        if (eBottom || eTop) internal.ey = ey - spacing;\n        break;\n      }\n      case 'top': {\n        internal.sy = sy + spacing;\n        internal.ey = ey + spacing;\n        // 检查左边和左右边及左上角右边及上左边\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        internal.sx = sx;\n        if (sTopLeftCorner) internal.sx = sx - spacing;\n        if (sLeft || sRight) internal.sx = sx + spacing;\n        // 检查右边和右左边及右上角左边及上右边\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        internal.ex = ex;\n        if (eTopRightCorner) internal.ex = ex + spacing;\n        if (eRight || eLeft) internal.ex = ex - spacing;\n        break;\n      }\n      case 'right': {\n        internal.sx = sx - spacing;\n        internal.ex = ex - spacing;\n        // 检查顶边和上底边及右上角底边及右上边\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        internal.sy = sy;\n        if (sTopRightCorner) internal.sy = sy - spacing;\n        if (sTop || sBottom) internal.sy = sy + spacing;\n        // 检查底边和下顶边右下角顶边及右下边\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        internal.ey = ey;\n        if (eBottomRightCorner) internal.ey = ey + spacing;\n        if (eBottom || eTop) internal.ey = ey - spacing;\n        break;\n      }\n      case 'bottom': {\n        internal.sy = sy - spacing;\n        internal.ey = ey - spacing;\n        // 检查左边和左右边及左下角右边及下左边\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        internal.sx = sx;\n        if (sBottomLeftCorner) internal.sx = sx - spacing;\n        if (sLeft || sRight) internal.sx = sx + spacing;\n        // 检查右边和右左边及右下角左边及下右边\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        internal.ex = ex;\n        if (eBottomRightCorner) internal.ex = ex + spacing;\n        if (eRight || eLeft) internal.ex = ex - spacing;\n        break;\n      }\n      default: break;\n    }\n    return internal;\n  }\n\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\n    if (!SheetUtils.isEmptyObject(internal)) {\n      draw.horizonLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\n    }\n    if (!SheetUtils.isEmptyObject(external)) {\n      draw.horizonLine([external.sx, external.sy], [external.ex, external.ey]);\n    }\n  }\n\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\n    if (!SheetUtils.isEmptyObject(internal)) {\n      draw.verticalLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\n    }\n    if (!SheetUtils.isEmptyObject(external)) {\n      draw.verticalLine([external.sx, external.sy], [external.ex, external.ey]);\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\n    // TODO ..\n    // ...\n  }\n\n}\nDoubleLine.spacing = XDraw.dpr() >= 2 ? 3 : 2;\n\nclass Line {\n\n  constructor(draw, attr = {}) {\n    this.widthType = XDraw.LINE_WIDTH_TYPE.low;\n    this.type = LINE_TYPE.SOLID_LINE;\n    this.solidLine = new SolidLine(draw, SheetUtils.copy({}, attr));\n    this.dottedLine = new DottedLine(draw, SheetUtils.copy({\n      dash: [5],\n    }, attr));\n    this.pointLine = new DottedLine(draw, SheetUtils.copy({\n      dash: [2, 2],\n    }, attr));\n    this.doubleLine = new DoubleLine(draw, SheetUtils.copy({}, attr));\n  }\n\n  setWidthType(widthType) {\n    if (widthType) {\n      if (this.type === LINE_TYPE.SOLID_LINE) {\n        this.solidLine.setWidthType(widthType);\n      }\n    }\n  }\n\n  setColor(color) {\n    if (color) {\n      this.solidLine.setColor(color);\n      this.dottedLine.setColor(color);\n      this.pointLine.setColor(color);\n      this.doubleLine.setColor(color);\n    }\n  }\n\n  setType(type) {\n    this.type = type;\n  }\n\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\n    const {\n      type,\n      solidLine,\n      dottedLine,\n      pointLine,\n      doubleLine,\n    } = this;\n    switch (type) {\n      case LINE_TYPE.SOLID_LINE:\n        solidLine.horizonLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOTTED_LINE:\n        dottedLine.horizonLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.POINT_LINE:\n        pointLine.horizonLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOUBLE_LINE:\n        doubleLine.horizonLine(sx, sy, ex, ey, row, col, pos);\n        break;\n    }\n  }\n\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\n    const {\n      type,\n      solidLine,\n      dottedLine,\n      pointLine,\n      doubleLine,\n    } = this;\n    switch (type) {\n      case LINE_TYPE.SOLID_LINE:\n        solidLine.verticalLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOTTED_LINE:\n        dottedLine.verticalLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.POINT_LINE:\n        pointLine.verticalLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOUBLE_LINE:\n        doubleLine.verticalLine(sx, sy, ex, ey, row, col, pos);\n        break;\n    }\n  }\n\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\n    const {\n      type,\n      solidLine,\n      dottedLine,\n      pointLine,\n      doubleLine,\n    } = this;\n    switch (type) {\n      case LINE_TYPE.SOLID_LINE:\n        solidLine.tiltingLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOTTED_LINE:\n        dottedLine.tiltingLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.POINT_LINE:\n        pointLine.tiltingLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOUBLE_LINE:\n        doubleLine.tiltingLine(sx, sy, ex, ey, row, col, pos);\n        break;\n    }\n  }\n\n}\n\nexport {\n  Line, LINE_TYPE, SolidLine,\n};\n","class Rect {\n\n  /**\n   * Rect\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   */\n  constructor({\n    x, y, width, height,\n  }) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * 判断两个矩形是否不发生重合\n   * @param {Rect} other 区域\n   * @returns {boolean}\n   */\n  disjoint(other) {\n    return this.x > other.x + other.width\n      || this.y > this.y + other.height\n      || other.x > this.x + this.width\n      || other.y > this.y + this.height;\n  }\n\n  /**\n   * 扩展尺寸\n   * @param size\n   * @returns {Rect}\n   */\n  expandSize(size) {\n    this.width += size;\n    this.height += size;\n    return this;\n  }\n\n  /**\n   * 是否包含点\n   * @param x\n   * @param y\n   * @returns {boolean}\n   */\n  includePoint(x, y) {\n    return x >= this.x && x <= this.x + this.width\n      && y >= this.y && y <= this.y + this.height;\n  }\n\n  /**\n   * 是否包含矩形\n   * @param rect\n   * @returns {boolean|boolean}\n   */\n  includeRect(rect) {\n    const { x, y, width, height } = rect;\n    return this.x <= x && this.x + this.width >= x + width\n      && this.y <= y && this.y + this.height >= y + height;\n  }\n\n  /**\n   * 计算当前矩形在指定矩形内部的位置\n   * @param rect\n   * @returns {Rect}\n   */\n  inRectPosition(rect) {\n    return new Rect({\n      x: this.x - rect.x,\n      y: this.y - rect.y,\n      width: this.width,\n      height: this.height,\n    });\n  }\n\n  /**\n   * 复制\n   * @returns {Rect}\n   */\n  clone() {\n    const { x, y, width, height } = this;\n    return new Rect({ x, y, width, height });\n  }\n\n}\n\nexport { Rect };\n","/* global devicePixelRatio */\nimport { SheetUtils } from '../utils/SheetUtils';\n\nlet DPR = SheetUtils.inWorker() ? 1 : devicePixelRatio;\nlet LINE_WIDTH_LOW = Math.round(DPR);\nlet LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\nlet LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\nlet LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\n\nclass Base {\n\n  static srcPx(px) {\n    return px / this.dpr();\n  }\n\n  static cssPx(px) {\n    return this.srcPx(this.stylePx(px));\n  }\n\n  static stylePx(px) {\n    return this.round(px * this.dpr());\n  }\n\n  static round(val) {\n    return Math.round(val);\n  }\n\n  static ceil(val) {\n    return Math.ceil(val);\n  }\n\n  static trunc(val) {\n    return Math.trunc(val);\n  }\n\n  static radian(angle) {\n    return -angle * (Math.PI / 180);\n  }\n\n  static dpr() {\n    return DPR;\n  }\n\n  static refresh(val = 1) {\n    DPR = SheetUtils.inWorker() ? val : devicePixelRatio;\n    LINE_WIDTH_LOW = Math.round(DPR);\n    LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\n    LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\n    LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\n  }\n\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n  }\n\n  attr(options) {\n    for (const key in options) {\n      if (options.hasOwnProperty(key)) {\n        let value = options[key];\n        if (typeof value === 'string' || value instanceof String) {\n          value = value.trim();\n        }\n        if (this.ctx[key] !== value) {\n          this.ctx[key] = value;\n        }\n      }\n    }\n    return this;\n  }\n\n  resize(width, height) {\n    const { canvas } = this;\n    canvas.width = Base.stylePx(width);\n    canvas.height = Base.stylePx(height);\n    canvas.style.width = `${canvas.width / Base.dpr()}px`;\n    canvas.style.height = `${canvas.height / Base.dpr()}px`;\n    return this;\n  }\n\n}\n\nclass Wrapping extends Base {\n\n  constructor(canvas) {\n    super(canvas);\n    this.dash = [];\n  }\n\n  beginPath() {\n    const { ctx } = this;\n    ctx.beginPath();\n    return this;\n  }\n\n  measureText(text) {\n    const { ctx } = this;\n    return ctx.measureText(text);\n  }\n\n  save() {\n    const { ctx } = this;\n    ctx.save();\n    return this;\n  }\n\n  restore() {\n    const { ctx } = this;\n    ctx.restore();\n    return this;\n  }\n\n  fill() {\n    const { ctx } = this;\n    ctx.fill();\n    return this;\n  }\n\n  clip() {\n    const { ctx } = this;\n    ctx.clip();\n    return this;\n  }\n\n  setLineDash(dash = []) {\n    const { ctx } = this;\n    this.dash = dash;\n    ctx.setLineDash(dash);\n    return this;\n  }\n\n  scale(x, y) {\n    const { ctx } = this;\n    ctx.scale(x, y);\n    return this;\n  }\n\n  translate(x, y) {\n    const { ctx } = this;\n    ctx.translate(x, y);\n    return this;\n  }\n\n  rotate(deg) {\n    const { ctx } = this;\n    ctx.rotate(deg);\n    return this;\n  }\n\n}\n\nclass Extends extends Wrapping {\n\n  polyStroke(interpolation = (xys) => xys, ...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      this.beginPath();\n      const [x, y] = interpolation(xys[0]);\n      ctx.moveTo(x, y);\n      for (let i = 1, len = xys.length; i < len; i += 1) {\n        const [x, y] = interpolation(xys[i]);\n        ctx.lineTo(x, y);\n      }\n      ctx.stroke();\n    }\n  }\n\n  polyInFill(interpolation = (xys) => xys, ...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      this.beginPath();\n      const [x, y] = interpolation(xys[0]);\n      ctx.moveTo(x, y);\n      for (let i = 1, len = xys.length; i < len; i += 1) {\n        const [x, y] = interpolation(xys[i]);\n        ctx.lineTo(x, y);\n      }\n      ctx.fill();\n    }\n  }\n\n  fullRect() {\n    const { canvas } = this;\n    const { width, height } = canvas;\n    this.ctx.fillRect(0, 0, width, height);\n    return this;\n  }\n\n  rotate(angle) {\n    super.rotate(Base.radian(angle));\n    return this;\n  }\n\n}\n\nclass Position extends Extends {\n\n  constructor(canvas) {\n    super(canvas);\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  offset(x, y) {\n    this.offsetX = x;\n    this.offsetY = y;\n  }\n\n  getOffsetX() {\n    return this.offsetX;\n  }\n\n  getOffsetY() {\n    return this.offsetY;\n  }\n\n  fillText() {\n    throw TypeError('child impl');\n  }\n\n  fillRect() {\n    throw TypeError('child impl');\n  }\n\n  rect() {\n    throw TypeError('child impl');\n  }\n\n  drawImage() {\n    throw TypeError('child impl');\n  }\n\n}\n\nclass BaseLine extends Position {\n\n  line(...xys) {\n    this.polyStroke((xys) => {\n      const [x, y] = xys;\n      return [this.linePx(Base.round(x + this.getOffsetX())),\n        this.linePx(Base.round(y + this.getOffsetY()))];\n    }, ...xys);\n    return this;\n  }\n\n  linePx(pixel) {\n    const { ctx } = this;\n    const {\n      lineWidth,\n    } = ctx;\n    return lineWidth % 2 === 0\n      ? pixel : pixel - 0.5;\n  }\n\n}\n\nclass CorsLine extends BaseLine {\n\n  static offsetToLineInside(val) {\n    return LINE_WIDTH_LOW > 1\n      ? val - LINE_PIXEL_OFFSET\n      : val - LINE_WIDTH_LOW;\n  }\n\n  static getLineWidthTypePx(type) {\n    switch (type) {\n      case CorsLine.LINE_WIDTH_TYPE.medium:\n        return LINE_WIDTH_MEDIUM;\n      case CorsLine.LINE_WIDTH_TYPE.low:\n        return LINE_WIDTH_LOW;\n      case CorsLine.LINE_WIDTH_TYPE.high:\n        return LINE_WIDTH_HIGH;\n    }\n    return 0;\n  }\n\n  constructor(canvas) {\n    super(canvas);\n    this.lineWidthType = CorsLine.LINE_WIDTH_TYPE.low;\n    this.lineColor = 'rgb(0,0,0)';\n  }\n\n  corsLine([sx, sy], [ex, ey]) {\n    const {\n      lineWidthType, lineColor,\n    } = this;\n    let lineWidth = LINE_WIDTH_LOW;\n    switch (lineWidthType) {\n      case CorsLine.LINE_WIDTH_TYPE.medium:\n        lineWidth = LINE_WIDTH_MEDIUM;\n        break;\n      case CorsLine.LINE_WIDTH_TYPE.low:\n        lineWidth = LINE_WIDTH_LOW;\n        break;\n      case CorsLine.LINE_WIDTH_TYPE.high:\n        lineWidth = LINE_WIDTH_HIGH;\n        break;\n    }\n    this.attr({\n      strokeStyle: lineColor,\n      lineWidth,\n    });\n    this.polyStroke((xys) => {\n      const [x, y] = xys;\n      return [\n        Base.round(x + this.getOffsetX()) - LINE_PIXEL_OFFSET,\n        Base.round(y + this.getOffsetY()) - LINE_PIXEL_OFFSET,\n      ];\n    }, [sx, sy], [ex, ey]);\n  }\n\n  setLineColor(color) {\n    this.lineColor = color;\n  }\n\n  setLineWidthType(type) {\n    this.lineWidthType = type;\n  }\n\n  horizonLine([sx, sy], [ex, ey]) {\n    if (sy !== ey) {\n      throw new TypeError('Error Horizon Line');\n    }\n    this.corsLine([sx, sy], [ex, ey]);\n  }\n\n  verticalLine([sx, sy], [ex, ey]) {\n    if (sx !== ex) {\n      throw new TypeError('Error Vertical Line');\n    }\n    this.corsLine([sx, sy], [ex, ey]);\n  }\n\n}\nCorsLine.LINE_WIDTH_TYPE = {\n  low: 'low',\n  medium: 'medium',\n  high: 'high',\n};\n\nclass XDraw extends CorsLine {\n\n  fillText(text, x, y) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.fillText(text, XDraw.round(x), XDraw.round(y));\n    return this;\n  }\n\n  fillPath(path) {\n    this.polyInFill((xys) => {\n      const { x, y } = xys;\n      return [Base.round(x + this.getOffsetX()), Base.round(y + this.getOffsetY())];\n    }, ...path.points);\n    return this;\n  }\n\n  fillRect(x, y, w, h) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.fillRect(\n      XDraw.round(x),\n      XDraw.round(y),\n      XDraw.round(w),\n      XDraw.round(h),\n    );\n    return this;\n  }\n\n  rect(x, y, w, h) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.rect(\n      XDraw.round(x),\n      XDraw.round(y),\n      XDraw.round(w),\n      XDraw.round(h),\n    );\n    return this;\n  }\n\n  copyImage(sx, sy, sw, sh, tx, ty, tw, th) {\n    const { ctx } = this;\n    tx += this.getOffsetX();\n    sx += this.getOffsetX();\n    ty += this.getOffsetY();\n    sy += this.getOffsetY();\n    ctx.drawImage(\n      this.canvas,\n      XDraw.round(sx),\n      XDraw.round(sy),\n      XDraw.round(sw),\n      XDraw.round(sh),\n      XDraw.round(tx),\n      XDraw.round(ty),\n      XDraw.round(tw),\n      XDraw.round(th),\n    );\n    return this;\n  }\n\n  drawImage(el, sx, sy, sw, sh, tx, ty, tw, th) {\n    const { ctx } = this;\n    tx += this.getOffsetX();\n    ty += this.getOffsetY();\n    ctx.drawImage(\n      el,\n      XDraw.round(sx),\n      XDraw.round(sy),\n      XDraw.round(sw),\n      XDraw.round(sh),\n      XDraw.round(tx),\n      XDraw.round(ty),\n      XDraw.round(tw),\n      XDraw.round(th),\n    );\n    return this;\n  }\n\n}\n\nexport {\n  XDraw,\n};\n","class BaseFont {\n\n  constructor({\n    draw, ruler, attr,\n  }) {\n    this.draw = draw;\n    this.attr = attr;\n    this.ruler = ruler;\n  }\n\n  setRuler(ruler) {\n    this.ruler = ruler;\n  }\n\n  getAlignPadding() {\n    if (this.attr.align === BaseFont.ALIGN.center) {\n      return 0;\n    }\n    return this.attr.padding;\n  }\n\n  getVerticalAlignPadding() {\n    if (this.attr.verticalAlign === BaseFont.VERTICAL_ALIGN.center) {\n      return 0;\n    }\n    return this.attr.padding;\n  }\n\n}\n\nBaseFont.VERTICAL_ALIGN = {\n  top: 'top',\n  center: 'middle',\n  bottom: 'bottom',\n};\nBaseFont.ALIGN = {\n  left: 'left',\n  center: 'center',\n  right: 'right',\n};\nBaseFont.TEXT_WRAP = {\n  OVER_FLOW: 1,\n  WORD_WRAP: 2,\n  TRUNCATE: 3,\n};\nBaseFont.TEXT_DIRECTION = {\n  HORIZONTAL: 'horizontal',\n  VERTICAL: 'vertical',\n  ANGLE: 'angle',\n  ANGLE_BAR: 'bar',\n};\nBaseFont.DEFAULT_FONT_ATTR = {\n  name: 'Arial',\n  size: 14,\n  color: 'rgb(0,0,0)',\n  bold: false,\n  italic: false,\n  strikethrough: false,\n  underline: false,\n  angle: 0,\n  padding: 8,\n  align: BaseFont.ALIGN.left,\n  textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\n  verticalAlign: BaseFont.VERTICAL_ALIGN.center,\n  direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\n};\nBaseFont.DEFAULT_RICH_ATTR = {\n  angle: 0,\n  padding: 8,\n  align: BaseFont.ALIGN.left,\n  textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\n  verticalAlign: BaseFont.VERTICAL_ALIGN.center,\n  direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\n};\nBaseFont.DEFAULT_RICH_ITEM_ATTR = {\n  name: 'Arial',\n  size: 14,\n  color: 'rgb(0,0,0)',\n  bold: false,\n  italic: false,\n  strikethrough: false,\n  underline: false,\n};\n\nexport {\n  BaseFont,\n};\n","/**\n * 运行函数注册\n * @type {{}}\n */\nclass EvalFunctions {\n\n  /**\n   * EvalFunctions\n   */\n  constructor() {\n    this.functions = {};\n  }\n\n  /**\n   * 删除函数\n   * @param name\n   */\n  remove(name) {\n    delete this.functions[name];\n  }\n\n  /**\n   * 获取函数\n   * @param name\n   * @returns {*}\n   */\n  getFunction(name) {\n    return this.functions[name.toLocaleString()];\n  }\n\n  /**\n   * 注册函数\n   * @param name\n   * @param func\n   */\n  register(name, func) {\n    this.functions[name.toLocaleString()] = func;\n  }\n}\n\n/**\n * 函数注册\n * @type {EvalFunctions}\n */\nconst Functions = new EvalFunctions();\n\n/**\n * 指令序列\n */\nclass Assembly {\n\n  /**\n   * Assembly\n   */\n  constructor() {\n    this.assembly = '';\n  }\n\n  /**\n   * 获取指令详情\n   * @returns {string}\n   */\n  getInstruct() {\n    let { assembly } = this;\n    let flag = '\\r\\n';\n    while (assembly.endsWith(flag)) {\n      let { length } = assembly;\n      assembly = assembly.substring(0, length - flag.length);\n    }\n    return assembly;\n  }\n\n  /**\n   * 写入操作数\n   * @param value\n   */\n  writeOperand(value) {\n    this.assembly += `OPush ${value}\\r\\n`;\n  }\n\n  /**\n   * 写入运算符\n   * @param op\n   */\n  writeOperator(op) {\n    this.assembly += `${op}\\r\\n`;\n  }\n\n  /**\n   * 写入操作数\n   * @param value\n   */\n  writeString(value) {\n    this.assembly += `SPush ${value}\\r\\n`;\n  }\n\n  /**\n   * 写入操作数\n   * @param value\n   */\n  writeNumber(value) {\n    this.assembly += `NPush ${value}\\r\\n`;\n  }\n}\n\n/**\n * 词法分析\n */\nclass Tokenizer {\n\n  /**\n   * Tokenizer\n   * @param syntaxCheck\n   */\n  constructor({\n    syntaxCheck = true,\n  } = {}) {\n    this.syntaxCheck = syntaxCheck;\n  }\n\n  /**\n   * 词法分析\n   * @param input\n   * @returns {*[]}\n   */\n  lexical(input) {\n    let OPERATOR = /^(\\+|-|\\*|\\/|%|>|<|,|\\^|=|&|!|:|>=|<=|<>)$/;\n    let NUMBERS = /[0-9.]/;\n    let SPACE = /\\s/;\n    let LETTERS = /[a-z0-9_$]/i;\n    // 文本字符长度\n    let { length } = input;\n    // 函数调用记录\n    let bracketsStack = [];\n    // 当前的字符索引\n    let current = 0;\n    // 处理的字符数组\n    let tokens = [];\n    // 循环处理所有字符\n    while (current < length) {\n      // 当前处理的字符\n      let char = input[current];\n      // 跳过连续空格\n      if (SPACE.test(char)) {\n        const next = input[current + 1];\n        if (SPACE.test(next)) {\n          current++;\n          continue;\n        }\n      }\n      // 记录交叉区域运算符\n      if (SPACE.test(char)) {\n        const last = input[current - 1];\n        const next = input[current + 1];\n        if (LETTERS.test(last) && LETTERS.test(next)) {\n          tokens.push({\n            type: 'operator',\n            value: char,\n          });\n        }\n        current++;\n        continue;\n      }\n      // 记录括号\n      if (char === '(') {\n        tokens.push({\n          type: 'brackets',\n          value: '(',\n        });\n        bracketsStack.push({\n          type: 'brackets',\n          value: '(',\n        });\n        current++;\n        continue;\n      }\n      if (char === ')') {\n        const brackets = bracketsStack.pop();\n        if (brackets && brackets.type === 'function') {\n          tokens.push({\n            type: 'function',\n            value: ')',\n          });\n        } else {\n          tokens.push({\n            type: 'brackets',\n            value: ')',\n          });\n        }\n        current++;\n        continue;\n      }\n      // 记录数组\n      if (char === '{') {\n        tokens.push({\n          type: 'array',\n          value: 'array',\n        });\n        tokens.push({\n          type: 'array',\n          value: '{',\n        });\n        current++;\n        continue;\n      }\n      if (char === '}') {\n        tokens.push({\n          type: 'array',\n          value: '}',\n        });\n        current++;\n        continue;\n      }\n      // 记录字符串\n      if (char === '\"') {\n        let result = '';\n        current++;\n        char = input[current];\n        while (char !== '\"') {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        current++;\n        char = input[current];\n        tokens.push({\n          type: 'string',\n          value: result,\n        });\n        continue;\n      }\n      if (char === '\\'') {\n        let result = '';\n        current++;\n        char = input[current];\n        while (char !== '\\'') {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        current++;\n        char = input[current];\n        tokens.push({\n          type: 'string',\n          value: result,\n        });\n        continue;\n      }\n      // 记录运算符\n      if (OPERATOR.test(char)) {\n        let next = input[current + 1];\n        let result = `${char}${next}`;\n        if (OPERATOR.test(result)) {\n          tokens.push({\n            type: 'operator',\n            value: result,\n          });\n          current++;\n        } else {\n          tokens.push({\n            type: 'operator',\n            value: char,\n          });\n        }\n        current++;\n        continue;\n      }\n      // 记录数字值\n      if (NUMBERS.test(char)) {\n        let result = '';\n        while (NUMBERS.test(char)) {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        tokens.push({\n          type: 'number',\n          value: result,\n        });\n        continue;\n      }\n      // 记录函数名称, 参数名称, 操作数名称\n      if (LETTERS.test(char)) {\n        let result = '';\n        while (LETTERS.test(char)) {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        // 是否为函数名称\n        if (char === '(') {\n          tokens.push({\n            type: 'function',\n            value: result,\n          });\n          tokens.push({\n            type: 'function',\n            value: '(',\n          });\n          bracketsStack.push({\n            type: 'function',\n            value: '(',\n          });\n          current++;\n        } else {\n          tokens.push({\n            type: 'operand',\n            value: result,\n          });\n        }\n        continue;\n      }\n      // 无法识别的token\n      throw new TypeError(`无法识别的token ${char} `);\n    }\n    // 返回处理结果\n    if (this.syntaxCheck) {\n      return this.syntax(tokens);\n    }\n    return tokens;\n  }\n\n  /**\n   * 语法分析\n   * @param tokens\n   */\n  syntax(tokens) {\n    // 单引号对校验\n    let sQuotesStack = [];\n    // 双引号对校验\n    let dQuotesStack = [];\n    // 函数闭合标签校验\n    let callStack = [];\n    // 数组闭合标签校验\n    let arrayStack = [];\n    // 括号闭合标签校验\n    let bracketsStack = [];\n    // 当前的字符索引\n    let current = 0;\n    // tokens长度\n    let { length } = tokens;\n    // 忽略的数组token\n    let ignoreArray = (token) => {\n      if (token.type === 'array') {\n        return token.value === 'array';\n      }\n      return false;\n    };\n    // 忽略的函数token\n    let ignoreFunc = (token) => {\n      if (token.type === 'function') {\n        return token.value !== '(' && token.value !== ')';\n      }\n      return false;\n    };\n    // 跳过忽略的元素\n    let skipIgnoreToken = (dir, index) => {\n      if (dir === 'last') {\n        while (index >= 0) {\n          let token = tokens[index];\n          if (ignoreFunc(token)) {\n            index--;\n            continue;\n          }\n          if (ignoreArray(token)) {\n            index--;\n            continue;\n          }\n          return token;\n        }\n      }\n      if (dir === 'next') {\n        while (index < length) {\n          let token = tokens[index];\n          if (ignoreFunc(token)) {\n            index++;\n            continue;\n          }\n          if (ignoreArray(token)) {\n            index++;\n            continue;\n          }\n          return token;\n        }\n      }\n      return null;\n    };\n    // 检查数组\n    let checkArray = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      if (token.value === '{') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '{') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              if (target.value === ',') {\n                return;\n              }\n              return;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'string':\n            case 'array':\n            case 'number':\n            case 'operand': {\n              return;\n            }\n            case 'function': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n      }\n      if (token.value === '}') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'number':\n            case 'string':\n            case 'array':\n            case 'operand': {\n              return;\n            }\n            case 'function': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '}') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              if (target.value === ',') {\n                return;\n              }\n              return;\n            }\n          }\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 检查数字和字符\n    let checkValue = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      switch (target.type) {\n        case 'array': {\n          if (dir === 'last') {\n            if (target.value === '{') {\n              return;\n            }\n          }\n          if (dir === 'next') {\n            if (target.value === '}') {\n              return;\n            }\n          }\n          break;\n        }\n        case 'brackets': {\n          if (dir === 'last') {\n            if (target.value === '(') {\n              return;\n            }\n          }\n          if (dir === 'next') {\n            if (target.value === ')') {\n              return;\n            }\n          }\n          break;\n        }\n        case 'function': {\n          if (dir === 'last') {\n            if (target.value === '(') {\n              return;\n            }\n          }\n          if (dir === 'next') {\n            if (target.value === ')') {\n              return;\n            }\n          }\n          break;\n        }\n        case 'operator': {\n          return;\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 检查运算符\n    let checkOperator = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      switch (target.type) {\n        case 'brackets':\n        case 'function':\n        case 'string':\n        case 'number':\n        case 'operand': {\n          return;\n        }\n        case 'array': {\n          if (token.value === ',') {\n            return;\n          }\n          break;\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 检查函数\n    let checkFunction = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      if (token.value === '(') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '{') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              return;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'function':\n            case 'string':\n            case 'number':\n            case 'operand': {\n              return;\n            }\n            case 'array': {\n              if (target.value === '{') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n      }\n      if (token.value === ')') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'function':\n            case 'number':\n            case 'string':\n            case 'operand': {\n              return;\n            }\n            case 'array': {\n              if (target.value === '}') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '}') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              if (target.value === ',') {\n                return;\n              }\n              return;\n            }\n          }\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 循环处理所有token\n    while (current < length) {\n      // 当前处理的token\n      let token = tokens[current];\n      // 跳过忽略token\n      if (ignoreArray(token)) {\n        current++;\n        continue;\n      }\n      if (ignoreFunc(token)) {\n        current++;\n        continue;\n      }\n      let { type, value } = token;\n      // 处理单引号\n      if (type === \"'\") {\n        if (sQuotesStack.length) {\n          sQuotesStack.pop();\n        } else {\n          // 双引号中嵌套单引号\n          if (!dQuotesStack.length) {\n            sQuotesStack.push(\"'\");\n          }\n        }\n      }\n      // 处理双引号\n      if (type === '\"') {\n        if (dQuotesStack.length) {\n          dQuotesStack.pop();\n        } else {\n          // 单引号中嵌套双引号\n          if (!sQuotesStack.length) {\n            dQuotesStack.push('\"');\n          }\n        }\n      }\n      // 处理字符\n      if (type === 'string') {\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkValue('last', last);\n        }\n        if (next) {\n          checkValue('next', next);\n        }\n      }\n      // 处理数字\n      if (type === 'number') {\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkValue('last', last);\n        }\n        if (next) {\n          checkValue('next', next);\n        }\n      }\n      // 处理数组\n      if (type === 'array') {\n        if (value === '{') {\n          arrayStack.push(token);\n        }\n        if (value === '}') {\n          if (arrayStack.length === 0) {\n            throw new TypeError('数组缺少闭合标签');\n          }\n          arrayStack.pop();\n        }\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkArray('last', last);\n        }\n        if (next) {\n          checkArray('next', next);\n        }\n      }\n      // 处理函数调用\n      if (type === 'function') {\n        if (value === '(') {\n          callStack.push(token);\n        }\n        if (value === ')') {\n          callStack.pop();\n        }\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkFunction('last', last);\n        }\n        if (next) {\n          checkFunction('next', next);\n        }\n      }\n      // 处理运算符号\n      if (type === 'operator') {\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        // 运算符需要两边都有操作数\n        if (last) {\n          checkOperator('last', last);\n        } else {\n          throw TypeError(`错误表达式: ${token.value} 错误`);\n        }\n        if (next) {\n          checkOperator('next', next);\n        } else {\n          throw TypeError(`错误表达式: ${token.value} 错误`);\n        }\n      }\n      // 处理括号\n      if (type === 'brackets') {\n        if (value === '(') {\n          bracketsStack.push(token);\n        }\n        if (value === ')') {\n          if (bracketsStack.length === 0) {\n            throw new TypeError('括号缺少闭合标签');\n          }\n          bracketsStack.pop();\n        }\n      }\n      // 处理下一个字符\n      current++;\n    }\n    // 闭合标签检查\n    if (arrayStack.length) {\n      throw new TypeError('数组缺少闭合标签');\n    }\n    if (callStack.length) {\n      throw new TypeError('函数缺少闭合标签');\n    }\n    if (sQuotesStack.length) {\n      throw new TypeError('单引号缺少闭合标签');\n    }\n    if (dQuotesStack.length) {\n      throw new TypeError('双引号缺少闭合标签');\n    }\n    if (bracketsStack.length) {\n      throw new TypeError('括号缺少闭合标签');\n    }\n    return tokens;\n  }\n}\n\n/**\n * 编译表达式\n */\nclass Compiler {\n\n  /**\n   * Compiler\n   * @param tokens\n   * @param writer\n   */\n  constructor({\n    tokens, writer,\n  } = {}) {\n    this.writer = writer;\n    this.tokens = tokens;\n    this.groupStack = [];\n    this.index = -1;\n    this.ignore = [','];\n    // 运算符\n    this.opIf = {\n      '>': 'ifge',\n      '<': 'ifgt',\n      '=': 'ifeq',\n      '>=': 'if_icmpge',\n      '<=': 'if_icmpgt',\n      '<>': 'ifne',\n    };\n    this.opAdd = {\n      '+': 'add',\n      '-': 'sub',\n      '&': 'link',\n    };\n    this.opMul = {\n      '*': 'mul',\n      '/': 'div',\n      '%': 'mod',\n      '^': 'power',\n    };\n    this.opCommon = {\n      ' ': 'common',\n    };\n    this.opRel = {\n      '!': 'rel',\n      ':': 'uni',\n    };\n    this.opNew = {\n      array: 'newarray',\n    };\n    this.opCell = {\n      function: 'invoke',\n    };\n  }\n\n  /**\n   * 结束\n   */\n  eofToken() {\n    const { index, tokens } = this;\n    const { length } = tokens;\n    return index >= length - 1;\n  }\n\n  /**\n   * 切换下一个Token\n   */\n  nextToken() {\n    this.index++;\n    this.token = this.tokens[this.index];\n    return this.token;\n  }\n\n  /**\n   * 返回上一个Token\n   */\n  backToken() {\n    this.index--;\n    this.token = this.tokens[this.index];\n    return this.token;\n  }\n\n  /**\n   * 记录参数\n   */\n  reduceGroup() {\n    const { groupStack } = this;\n    const { length } = groupStack;\n    if (length > 0) {\n      const last = groupStack[length - 1];\n      const number = last.number;\n      last.number = number - 1;\n    }\n  }\n\n  /**\n   * 记录参数\n   */\n  increaseGroup() {\n    const { groupStack } = this;\n    const { length } = groupStack;\n    if (length > 0) {\n      const last = groupStack[length - 1];\n      const number = last.number;\n      last.number = number + 1;\n    }\n  }\n\n  /**\n   * 弹出组\n   */\n  popGroup() {\n    return this.groupStack.pop();\n  }\n\n  /**\n   * 添加组\n   */\n  addGroup(token) {\n    token.number = 0;\n    this.groupStack.push(token);\n    return token;\n  }\n\n  /**\n   * 忽略的Token\n   * @returns {*}\n   */\n  isSkipNextToken() {\n    if (!this.eofToken()) {\n      const { ignore } = this;\n      this.nextToken();\n      const { token } = this;\n      this.backToken();\n      const { value } = token;\n      return ignore.includes(value);\n    }\n    return false;\n  }\n\n  /**\n   * 编译表达式\n   */\n  compile() {\n    const { writer } = this;\n    this.compileIfge();\n    while (this.isSkipNextToken()) {\n      this.nextToken();\n      this.compileIfge();\n    }\n    return writer.getInstruct();\n  }\n\n  /**\n   * 编译条件运算\n   */\n  compileIfge() {\n    this.compileAdd();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opIf[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opIf[value];\n      this.compileAdd();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译加减运算\n   */\n  compileAdd() {\n    this.compileMul();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opAdd[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opAdd[value];\n      this.compileMul();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译乘除运算\n   */\n  compileMul() {\n    this.compileCommon();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opMul[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opMul[value];\n      this.compileCommon();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译公共区域运算\n   */\n  compileCommon() {\n    this.compileRel();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opCommon[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opCommon[value];\n      this.compileRel();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译跨Sheet引用运算\n   */\n  compileRel() {\n    this.compileArray();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opRel[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opRel[value];\n      this.compileArray();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译数组创建\n   */\n  compileArray() {\n    this.compileFunction();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'array') {\n        this.backToken();\n        break;\n      }\n      // 返回跳过 } 标记\n      if (value === '}') {\n        this.backToken();\n        break;\n      }\n      this.addGroup(token);\n      // 跳过当前 {  标记\n      this.nextToken();\n      // 处理数组中的子元素\n      this.compileIfge();\n      // 下一个是忽略的标记\n      // 则继续处理\n      while (this.isSkipNextToken()) {\n        this.nextToken();\n        this.compileIfge();\n      }\n      // 记录数组需要\n      // 操作的元素数量\n      this.popGroup();\n      const { number } = token;\n      const operator = this.opNew[type];\n      this.writer.writeOperator(`${operator} ${number}`);\n      // 跳过闭合标签 }\n      this.nextToken();\n    }\n  }\n\n  /**\n   * 编译函数调用\n   */\n  compileFunction() {\n    this.compilePushValue();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'function') {\n        this.backToken();\n        break;\n      }\n      // 返回跳过 ) 标记\n      if (value === ')') {\n        this.backToken();\n        break;\n      }\n      this.addGroup(token);\n      // 跳过当前 (  标记\n      this.nextToken();\n      // 处理函数的参数列表\n      this.compileIfge();\n      // 下一个是忽略的标记\n      // 则继续处理\n      while (this.isSkipNextToken()) {\n        this.nextToken();\n        this.compileIfge();\n      }\n      // 记录函数需要\n      // 操作的元素数量\n      this.popGroup();\n      const { number } = token;\n      const operator = this.opCell[type];\n      this.writer.writeOperator(`${operator} ${value} ${number}`);\n      // 跳过闭合标签 )\n      this.nextToken();\n    }\n  }\n\n  /**\n   * compilePushValue\n   */\n  compilePushValue() {\n    if (!this.eofToken()) {\n      const token = this.nextToken();\n      const { writer } = this;\n      const { type, value } = token;\n      // 推送操作数\n      // 递增函数/数组的参数数量(有的话)\n      switch (type) {\n        case 'string': {\n          this.increaseGroup();\n          writer.writeString(`${value}`);\n          return;\n        }\n        case 'number': {\n          this.increaseGroup();\n          writer.writeNumber(`${value}`);\n          return;\n        }\n        case 'operand': {\n          this.increaseGroup();\n          writer.writeOperand(value);\n          return;\n        }\n      }\n      // 处理括号计算\n      switch (type) {\n        case 'brackets': {\n          if (value === '(') {\n            this.compileIfge();\n            // 下一个是忽略的标记\n            // 则继续处理\n            while (this.isSkipNextToken()) {\n              this.nextToken();\n              this.compileIfge();\n            }\n            // 跳过闭合标签 )\n            this.nextToken();\n          }\n          return;\n        }\n      }\n      // 递增函数/数组的参数数量(有的话)\n      switch (type) {\n        case 'array': {\n          // {} 这种清空不需要增加参数数量\n          if (value !== '}') {\n            this.increaseGroup();\n          }\n          this.backToken();\n          return;\n        }\n        case 'function': {\n          // func() 这种清空不需要增加参数数量\n          if (value !== ')') {\n            this.increaseGroup();\n          }\n          this.backToken();\n          return;\n        }\n      }\n      // 过滤掉运算符\n      switch (type) {\n        case 'operator': {\n          this.backToken();\n          return;\n        }\n      }\n      // 无法识别的token\n      throw new TypeError(`无法识别的token ${type} ${value} `);\n    }\n  }\n}\n\n/**\n * 运行表达式\n */\nclass Evaluation {\n\n  /**\n   * Evaluate\n   * @param instruct\n   */\n  constructor(instruct) {\n    this.instruct = instruct.split('\\r\\n');\n    this.memory = [];\n  }\n\n  /**\n   * 运行表达式\n   */\n  eval() {\n    const newArray = /^newarray/;\n    const invoke = /^invoke/;\n    const pushSRegexp = /^SPush/;\n    const pushNRegexp = /^NPush/;\n    const pushORegexp = /^OPush/;\n    const { instruct } = this;\n    instruct.forEach((name) => {\n      switch (name) {\n        case 'if_icmpge': {\n          this.ificmpge();\n          break;\n        }\n        case 'if_icmpgt': {\n          this.ificmpgt();\n          break;\n        }\n        case 'ifge': {\n          this.ifge();\n          break;\n        }\n        case 'ifgt': {\n          this.ifgt();\n          break;\n        }\n        case 'ifeq': {\n          this.ifeq();\n          break;\n        }\n        case 'ifne': {\n          this.ifne();\n          break;\n        }\n        case 'add': {\n          this.add();\n          break;\n        }\n        case 'sub': {\n          this.sub();\n          break;\n        }\n        case 'mul': {\n          this.mul();\n          break;\n        }\n        case 'div': {\n          this.div();\n          break;\n        }\n        case 'mod': {\n          this.mod();\n          break;\n        }\n        case 'power': {\n          this.power();\n          break;\n        }\n        case 'rel': {\n          this.rel();\n          break;\n        }\n        case 'link': {\n          this.link();\n          break;\n        }\n        case 'uni': {\n          this.uni();\n          break;\n        }\n        case 'common': {\n          this.common();\n          break;\n        }\n        default: {\n          if (newArray.test(name)) {\n            const group = name.split(' ');\n            const index = group[1];\n            this.array(index);\n            break;\n          }\n          if (invoke.test(name)) {\n            const group = name.split(' ');\n            const func = group[1];\n            const index = group[2];\n            this.invoke(func, index);\n            break;\n          }\n          if (pushSRegexp.test(name)) {\n            const value = name.split(' ')[1];\n            this.pushS(value);\n            break;\n          }\n          if (pushNRegexp.test(name)) {\n            const value = name.split(' ')[1];\n            this.pushN(value);\n            break;\n          }\n          if (pushORegexp.test(name)) {\n            const value = name.split(' ')[1];\n            this.pushO(value);\n            break;\n          }\n        }\n      }\n    });\n    return this.memory.pop();\n  }\n\n  /**\n   * 推送操作数\n   * @param value\n   */\n  pushS(value) {\n    this.memory.push(value);\n  }\n\n  /**\n   * 推送操作数\n   * @param value\n   */\n  pushN(value) {\n    value = parseFloat(value);\n    this.memory.push(value);\n  }\n\n  /**\n   * 推送操作数\n   * @param value\n   */\n  pushO(value) {\n    this.memory.push(value);\n  }\n\n  /**\n   * 两个值的大于比较\n   */\n  ifge() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a > b);\n  }\n\n  /**\n   * 两个值的小于比较\n   */\n  ifgt() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a < b);\n  }\n\n  /**\n   * 两个值的相等比较\n   */\n  ifeq() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a === b);\n  }\n\n  /**\n   * 两个值的不等比较\n   */\n  ifne() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a !== b);\n  }\n\n  /**\n   * 两个值的大于等于比较\n   */\n  ificmpge() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a >= b);\n  }\n\n  /**\n   * 两个值的小于等于比较\n   */\n  ificmpgt() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a <= b);\n  }\n\n  /**\n   * 两个值的加法运算\n   */\n  add() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a + b);\n  }\n\n  /**\n   * 两个值的减法运算\n   */\n  sub() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a - b);\n  }\n\n  /**\n   * 两个值的乘法运算\n   */\n  mul() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a * b);\n  }\n\n  /**\n   * 两个值的除法运算\n   */\n  div() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a / b);\n  }\n\n  /**\n   * 两个值的mod运算\n   */\n  mod() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a % b);\n  }\n\n  /**\n   * 计算两个区域的并集\n   */\n  common() {\n    // TODO ...\n    // ....\n  }\n\n  /**\n   * 跨sheet引用运算\n   */\n  rel() {\n    // TODO ...\n    // ....\n  }\n\n  /**\n   * 计算两个区域连接的新区域\n   */\n  uni() {\n    // TODO ...\n    // ....\n  }\n\n  /**\n   * 字符串连接运算\n   */\n  link() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(`${a}${b}`);\n  }\n\n  /**\n   * 乘方计算\n   */\n  power() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a ** b);\n  }\n\n  /**\n   * 创建数组\n   * @param index\n   */\n  array(index) {\n    const array = [];\n    for (let i = 1; i <= index; i++) {\n      const item = this.memory.pop();\n      array.push(item);\n    }\n    array.reverse();\n    this.memory.push(array);\n  }\n\n  /**\n   * 执行函数\n   * @param func\n   * @param index\n   */\n  invoke(func, index) {\n    const array = [];\n    for (let i = 1; i <= index; i++) {\n      const item = this.memory.pop();\n      array.push(item);\n    }\n    array.reverse();\n    const execute = Functions.getFunction(func);\n    const result = execute.apply(this, array);\n    this.memory.push(result);\n  }\n}\n\n/**\n * 编译输出指令\n * @param input\n * @returns {string|*}\n * @constructor\n */\nconst Compile = (input) => {\n  if (input.startsWith('=')) {\n    input = input.substring(1);\n  }\n  const tokenizer = new Tokenizer();\n  const writer = new Assembly();\n  const tokens = tokenizer.lexical(input);\n  const compiler = new Compiler({\n    writer, tokens,\n  });\n  return compiler.compile();\n};\n\n/**\n * 运行指令\n * @param inst\n * @returns {*}\n * @constructor\n */\nconst Instruct = (inst) => {\n  const evaluation = new Evaluation(inst);\n  return evaluation.eval();\n};\n\n/**\n * 编译运行\n * @constructor\n */\nconst Evaluate = (input) => Instruct(Compile(input));\n\nexport {\n  Tokenizer,\n  Compiler,\n  Assembly,\n  Compile,\n  Evaluate,\n  Instruct,\n  Functions,\n};\n","import { Compile, Instruct } from './Compiler';\nimport { SheetUtils } from '../utils/SheetUtils';\n\n/**\n * Formula\n */\nclass Formula {\n\n  /**\n   * Formula\n   * @param expr\n   */\n  constructor({\n    expr = SheetUtils.EMPTY,\n  } = {}) {\n    this.expr = expr;\n    this.content = SheetUtils.Nul;\n    this.instruct = SheetUtils.Nul;\n  }\n\n  /**\n   * 计算公式\n   * @return {string}\n   */\n  getValue() {\n    let { expr } = this;\n    let { content } = this;\n    let { instruct } = this;\n    if (!content) {\n      if (!instruct) {\n        instruct = Compile(expr);\n      }\n      content = Instruct(instruct);\n    }\n    this.content = content;\n    this.instruct = instruct;\n    return content;\n  }\n\n  /**\n   * 有效的表达式\n   * @return {boolean}\n   */\n  hasExpr() {\n    let { expr } = this;\n    return !SheetUtils.isBlank(expr);\n  }\n\n  /**\n   * 获取表达式\n   * @return {string}\n   */\n  getExpr() {\n    return this.expr;\n  }\n\n  /**\n   * 设置表达式\n   * @param expr\n   */\n  setExpr(expr) {\n    this.expr = expr;\n    this.content = SheetUtils.Nul;\n    this.instruct = SheetUtils.Nul;\n  }\n\n  /**\n   * 复制\n   * @returns {Formula}\n   */\n  clone() {\n    return new Formula({\n      expr: this.expr,\n    });\n  }\n\n}\n\nFormula.EMPTY = new Formula();\n\nFormula.getInstance = (config) => {\n  if (config) {\n    return new Formula(config);\n  }\n  return Formula.EMPTY;\n};\n\nexport {\n  Formula,\n};\n","/* global document MouseEvent CustomEvent window NodeList HTMLCollection DocumentFragment */\nimport { SheetUtils } from '../utils/SheetUtils';\n\n/**\n * Element\n */\nclass Element {\n\n  /**\n   * 包装元素\n   */\n  static wrapElement(object) {\n    if ([\n      SheetUtils.isArray(object),\n      object instanceof HTMLCollection,\n      object instanceof NodeList,\n    ].includes(true)) {\n      let elements = [];\n      for (let i = 0; i < object.length; i++) {\n        const item = object[i];\n        if (item instanceof Element) {\n          elements.push(item);\n        } else {\n          elements.push(new Element(item));\n        }\n      }\n      return elements;\n    }\n    return new Element(object);\n  }\n\n  static createText(text) {\n    return new Element(document.createTextNode(text));\n  }\n\n  /**\n   * 驼峰转连字符\n   * @param value\n   * @returns {string|null}\n   */\n  static hyphenateRE(value) {\n    if (value) {\n      return value.replace(/([A-Z])/g, '-$1').toLowerCase();\n    }\n    return null;\n  }\n\n  /**\n   * Element\n   * @param tag\n   * @param className\n   */\n  constructor(tag, className = '') {\n    if (typeof tag === 'string') {\n      this.el = document.createElement(tag);\n      if (className) {\n        this.el.className = className;\n      }\n    } else {\n      this.el = tag;\n    }\n    this.map = {};\n  }\n\n  /**\n   * 数据绑定\n   * @param key\n   * @param value\n   * @returns {Element|*}\n   */\n  data(key, value) {\n    if (value !== undefined) {\n      this.map[key] = value;\n      return this;\n    }\n    return this.map[key];\n  }\n\n  /**\n   * 空参数时返回子元素,\n   * 有参数时插入子节点\n   * @param args\n   * @returns {*[]|Element}\n   */\n  children(...args) {\n    if (arguments.length === 0) {\n      return Element.wrapElement(this.el.children);\n    }\n    args.forEach((ele) => this.append(ele));\n    return this;\n  }\n\n  /**\n   * 空参数时返回子节点,\n   * 有参数时插入子节点\n   * @param args\n   * @returns {*[]|Element}\n   */\n  childrenNodes(...args) {\n    if (arguments.length === 0) {\n      return Element.wrapElement(this.el.childNodes);\n    }\n    args.forEach((ele) => this.append(ele));\n    return this;\n  }\n\n  /**\n   * 将目标节点添加到当前元素中\n   * @param ele\n   */\n  childrenNodesAppend(ele) {\n    if (!this.isTextNode()) {\n      ele.childrenNodes().forEach((i) => this.append(i));\n    }\n    return this;\n  }\n\n  /**\n   * 将目标节点添加到当前元素中\n   * @param ele\n   */\n  childrenNodesPrepend(ele) {\n    if (!this.isTextNode()) {\n      ele.childrenNodes().forEach((i) => this.prepend(i));\n    }\n    return this;\n  }\n\n  /**\n   * 在当前元素中插入指定节点\n   * @param ele\n   */\n  append(ele) {\n    if (!this.isTextNode()) {\n      if (ele && ele.el) {\n        this.el.append(ele.el);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 在当前元素中插入指定节点\n   * @param ele\n   */\n  prepend(ele) {\n    if (!this.isTextNode()) {\n      if (ele && ele.el) {\n        this.el.prepend(ele.el);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 元素定位\n   * @param value\n   * @returns {{top: *, left: *, width: *, height: *}|Element}\n   */\n  offset(value) {\n    if (value !== undefined) {\n      Object.keys(value).forEach((k) => {\n        this.css(k, `${value[k]}px`);\n      });\n      return this;\n    }\n    const { offsetTop, offsetLeft } = this.el;\n    const { offsetHeight, offsetWidth } = this.el;\n    return {\n      top: offsetTop,\n      left: offsetLeft,\n      height: offsetHeight,\n      width: offsetWidth,\n    };\n  }\n\n  /**\n   * 获取当前元素的父节点\n   * @returns {Element}\n   */\n  parent() {\n    return this.el.parentNode\n      ? new Element(this.el.parentNode) : null;\n  }\n\n  /**\n   * 添加Class名称\n   * @param name\n   * @returns {Element}\n   */\n  addClass(name) {\n    if (!this.isTextNode()) {\n      this.el.classList.add(name);\n    }\n    return this;\n  }\n\n  /**\n   * 是否具有指定Class名称\n   * @param name\n   * @returns {boolean}\n   */\n  hasClass(name) {\n    if (!this.isTextNode()) {\n      return this.el.classList.contains(name);\n    }\n    return false;\n  }\n\n  /**\n   * 是否有子元素\n   * @returns {boolean}\n   */\n  hasChildElement() {\n    return this.children().length > 0;\n  }\n\n  /**\n   * 是否有子节点\n   * @returns {boolean}\n   */\n  hasChild() {\n    return this.childrenNodes().length > 0;\n  }\n\n  /**\n   * 删除Class名称\n   * @param name\n   * @returns {Element}\n   */\n  removeClass(name) {\n    if (!this.isTextNode()) {\n      this.el.classList.remove(name);\n    }\n    return this;\n  }\n\n  /**\n   * 获取元素坐标信息\n   * getBoundingClientRect\n   * @returns {DOMRect}\n   */\n  box() {\n    if (!this.isTextNode()) {\n      return this.el.getBoundingClientRect();\n    }\n    return null;\n  }\n\n  /**\n   * 获取当前第一个子元素\n   * @returns {*}\n   */\n  first() {\n    if (!this.isTextNode()) {\n      return Element.wrapElement(this.el.firstChild);\n    }\n    return null;\n  }\n\n  /**\n   * 获取最后一个子元素\n   * @returns {*}\n   */\n  last() {\n    if (!this.isTextNode()) {\n      return Element.wrapElement(this.el.lastChild);\n    }\n    return null;\n  }\n\n  /**\n   * 获取第一个文本节点\n   */\n  firstTextNode() {\n    if (this.isTextNode()) {\n      return this;\n    }\n    let find = null;\n    let handle = (elem) => {\n      if (elem.hasChild()) {\n        elem.childrenNodes().forEach((elem) => {\n          if (find === null) {\n            handle(elem);\n          }\n        });\n      }\n      if (find === null) {\n        if (elem.isTextNode()) {\n          find = elem;\n        }\n      }\n    };\n    handle(this);\n    return find;\n  }\n\n  /**\n   * 获取最后一个文本节点\n   */\n  lastTextNode() {\n    if (this.isTextNode()) {\n      return this;\n    }\n    let find = null;\n    let handle = (elem) => {\n      if (elem.hasChild()) {\n        elem.childrenNodes().reverse().forEach((elem) => {\n          if (find === null) {\n            handle(elem);\n          }\n        });\n      }\n      if (find === null) {\n        if (elem.isTextNode()) {\n          find = elem;\n        }\n      }\n    };\n    handle(this);\n    return find;\n  }\n\n  /**\n   * 删除当前元素下的子元素\n   * @param target\n   * @returns {boolean|ActiveX.IXMLDOMNode|*}\n   */\n  remove(target = null) {\n    if (target) {\n      if (!this.isTextNode()) {\n        this.el.removeChild(target.el || target);\n      }\n    } else {\n      const parent = this.parent();\n      if (parent) {\n        this.parent().remove(this);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 当前元素是否包含指定节点\n   * @param ele\n   * @returns {boolean|*}\n   */\n  contains(ele) {\n    if (this.isTextNode()) {\n      return false;\n    }\n    return this.el.contains(ele.el);\n  }\n\n  /**\n   * 获取当前元素的上一个元素\n   * @returns {*}\n   */\n  prev() {\n    return this.el.previousSibling\n      ? Element.wrapElement(this.el.previousSibling) : null;\n  }\n\n  /**\n   * 获取当前元素的下一个元素\n   * @returns {*}\n   */\n  next() {\n    return this.el.nextSibling\n      ? Element.wrapElement(this.el.nextSibling) : null;\n  }\n\n  /**\n   * 设置元素的激活状态\n   * @param flag\n   * @param cls\n   * @returns {Element}\n   */\n  active(flag = true, cls = 'active') {\n    if (!this.isTextNode()) {\n      if (flag) this.addClass(cls);\n      else this.removeClass(cls);\n    }\n    return this;\n  }\n\n  /**\n   * 设置元素文本\n   * @param text\n   * @returns {string|Element}\n   */\n  text(text) {\n    if (this.isTextNode()) {\n      return this.nodeValue();\n    }\n    if (text !== undefined) {\n      this.el.innerText = text;\n      return this;\n    }\n    return this.el.innerText;\n  }\n\n  /**\n   * 设置元素html内容\n   * @param html\n   * @returns {Element|*}\n   */\n  html(html) {\n    if (this.isTextNode()) {\n      return this.nodeValue();\n    }\n    if (html !== undefined) {\n      this.el.innerHTML = html;\n      return this;\n    }\n    return this.el.innerHTML;\n  }\n\n  /**\n   * 当前元素设置焦点\n   */\n  focus() {\n    if (!this.isTextNode()) {\n      this.el.focus();\n    }\n    return this;\n  }\n\n  /**\n   * 移除焦点\n   */\n  blur() {\n    if (!this.isTextNode()) {\n      this.el.blur();\n    }\n    return this;\n  }\n\n  /**\n   * 删除元素属性\n   * @param key\n   * @returns {Element}\n   */\n  removeAttr(key) {\n    if (!this.isTextNode()) {\n      this.el.removeAttribute(key);\n    }\n    return this;\n  }\n\n  /**\n   * 添加style\n   * @param style\n   */\n  style(style) {\n    if (!this.isTextNode()) {\n      this.attr('style', style);\n    }\n    return this;\n  }\n\n  /**\n   * 添加元素属性\n   * @param key\n   * @param value\n   * @returns {string|Element}\n   */\n  attr(key, value) {\n    if (!this.isTextNode()) {\n      if (value !== undefined) {\n        if (this.el.setAttribute) {\n          this.el.setAttribute(key, value);\n        }\n      } else {\n        if (typeof key === 'string') {\n          if (this.el.setAttribute) {\n            return this.el.getAttribute(key);\n          }\n          return null;\n        }\n        if (this.el.setAttribute) {\n          Object.keys(key).forEach((k) => {\n            this.el.setAttribute(k, key[k]);\n          });\n        }\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 设置元素Value\n   * @param v\n   * @returns {Element|*}\n   */\n  val(v) {\n    if (!this.isTextNode()) {\n      if (v !== undefined) {\n        this.el.value = v;\n        return this;\n      }\n      return this.el.value;\n    }\n    if (v === undefined) {\n      return this.nodeValue();\n    }\n    return this;\n  }\n\n  /**\n   * 获取原始节点\n   * @returns {*}\n   */\n  get() {\n    return this.el;\n  }\n\n  /**\n   * 删除元素style属性\n   * @param keys\n   * @returns {Element}\n   */\n  cssRemoveKeys(...keys) {\n    if (!this.isTextNode()) {\n      if (this.el.style) {\n        keys.forEach((k) => {\n          if (this.el.style) {\n            this.el.style.removeProperty(Element.hyphenateRE(k));\n          }\n        });\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 删除元素style属性\n   * @param key\n   * @param value\n   * @returns {Element}\n   */\n  cssRemoveVal(key, value) {\n    if (!this.isTextNode()) {\n      if (this.el.style) {\n        const property = Element.hyphenateRE(key);\n        const propertyValue = this.el.style.getPropertyValue(property);\n        const newValue = propertyValue.replace(value, '');\n        this.css(key, newValue);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 设置元素属性\n   * @param name\n   * @param value\n   * @returns {string|null|Element}\n   */\n  css(name, value = undefined) {\n    if (!this.isTextNode()) {\n      if (this.el.style) {\n        if (value === undefined && typeof name !== 'string') {\n          Object.keys(name).forEach((key) => {\n            const property = Element.hyphenateRE(key);\n            this.el.style.setProperty(property, name[key]);\n          });\n          return this;\n        }\n        if (value !== undefined) {\n          const property = Element.hyphenateRE(name);\n          this.el.style.setProperty(property, value);\n          return this;\n        }\n        const property = Element.hyphenateRE(name);\n        return this.el.style.getPropertyValue(property);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 获取元素计算完成的样式\n   * @returns {CSSStyleDeclaration}\n   */\n  computedStyle() {\n    if (!this.isTextNode()) {\n      return window.getComputedStyle(this.el, null);\n    }\n    return null;\n  }\n\n  /**\n   * 显示\n   * @returns {Element}\n   */\n  show() {\n    if (!this.isTextNode()) {\n      const style = this.computedStyle();\n      if (style && style.display !== 'block') {\n        this.css('display', 'block');\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 隐藏\n   * @returns {Element}\n   */\n  hide() {\n    if (!this.isTextNode()) {\n      const style = this.computedStyle();\n      if (style && style.display !== 'none') {\n        this.css('display', 'none');\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 事件触发\n   * @param type\n   * @param message\n   */\n  trigger(type, message) {\n    if (!this.isTextNode()) {\n      switch (type) {\n        case 'click': {\n          const evt = new MouseEvent(type, {\n            detail: message,\n            bubbles: true,\n            cancelable: false,\n          });\n          evt.initEvent('click', true, true);\n          this.el.dispatchEvent(evt);\n          break;\n        }\n        default: {\n          const evt = new CustomEvent(type, {\n            detail: message,\n            bubbles: true,\n            cancelable: false,\n          });\n          this.el.dispatchEvent(evt);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * 查找子元素\n   * @param select\n   * @returns {[]|Element}\n   */\n  find(select) {\n    if (!this.isTextNode()) {\n      const result = this.el.querySelectorAll(select);\n      if (result && result.length === 1) {\n        return new Element(result[0]);\n      }\n      const array = [];\n      if (result) {\n        for (const item of result) {\n          array.push(new Element(item));\n        }\n      }\n      return array;\n    }\n    return [];\n  }\n\n  /**\n   * 查找子元素\n   * @param select\n   * @returns {[]|Element}\n   */\n  finds(select) {\n    if (!this.isTextNode()) {\n      const result = this.el.querySelectorAll(select);\n      const array = [];\n      if (result) {\n        for (const item of result) {\n          array.push(new Element(item));\n        }\n      }\n      return array;\n    }\n    return [];\n  }\n\n  /**\n   * 获取当前元素的兄弟节点\n   * @returns {[]}\n   */\n  sibling() {\n    let sibling = this.el;\n    const result = [];\n    // eslint-disable-next-line no-cond-assign\n    while ((sibling = sibling.previousElementSibling) !== null) result.push(new Element(sibling));\n    sibling = this.el;\n    // eslint-disable-next-line no-cond-assign\n    while ((sibling = sibling.nextElementSibling) !== null) result.push(new Element(sibling));\n    return result;\n  }\n\n  /**\n   * 节点名称\n   * @returns {string}\n   */\n  tagName() {\n    return this.el.nodeName.toLocaleLowerCase();\n  }\n\n  /**\n   * 节点内容\n   * @returns {string}\n   */\n  nodeValue() {\n    return this.el.nodeValue;\n  }\n\n  /**\n   * 节点类型\n   * @returns {number}\n   */\n  nodeType() {\n    return this.el.nodeType;\n  }\n\n  /**\n   * 在当前元素之后插入新元素\n   * @param ele\n   */\n  after(ele) {\n    if (this.el && ele && ele.el) {\n      this.el.after(ele.el);\n    }\n    return this;\n  }\n\n  /**\n   * 在当前元素之前插入新元素\n   * @param ele\n   */\n  before(ele) {\n    if (this.el && ele && ele.el) {\n      this.el.before(ele.el);\n    }\n    return this;\n  }\n\n  /**\n   * 复制\n   */\n  clone() {\n    return new Element(this.el.cloneNode(true));\n  }\n\n  /**\n   * 清空元素中的所有内容\n   */\n  empty() {\n    if (!this.isTextNode()) {\n      this.html('');\n    }\n    return this;\n  }\n\n  /**\n   * 相等比较\n   * @param other\n   * @returns {boolean}\n   */\n  equals(other) {\n    return this.el === other.el;\n  }\n\n  /**\n   * 获取当前元素在父元素中的索引\n   * @returns {number}\n   */\n  index() {\n    let parent = this.parent();\n    let index = -1;\n    parent.childrenNodes()\n      .forEach((v, i) => {\n        if (v.equals(this)) {\n          index = i;\n        }\n      });\n    return index;\n  }\n\n  /**\n   * 比较dom是否相同\n   * @param ele\n   * @returns {boolean}\n   */\n  is(ele) {\n    return this.el === ele.el;\n  }\n\n  /**\n   * 是否文本节点\n   * @returns {boolean}\n   */\n  isTextNode() {\n    return this.tagName() === '#text';\n  }\n\n  /**\n   * 是否换行节点\n   * @returns {boolean}\n   */\n  isBreakNode() {\n    return this.tagName() === 'br';\n  }\n\n  /**\n   * 是否文档碎片\n   * @returns {boolean}\n   */\n  isDocumentFragment() {\n    return this.el instanceof DocumentFragment;\n  }\n\n}\n\nconst h = (tag, className = '') => new Element(tag, className);\n\nconst TextNode = (text) => Element.createText(text);\n\nexport {\n  Element,\n  TextNode,\n  h,\n};\n","/* global document */\n\nimport { Element, h } from './Element';\nimport { cssPrefix } from '../const/Constant';\nimport { XEvent } from './XEvent';\n\n/**\n * Life\n */\nclass Life extends Element {\n\n  onAttach() { }\n\n}\n\n/**\n * Widget\n */\nclass Widget extends Life {\n\n  /**\n   * Widget\n   * @param className\n   * @param nodeType\n   * @param $$rootFlag\n   */\n  constructor(className = '', nodeType = 'div', $$rootFlag = false) {\n    if (typeof className === 'string') {\n      super(nodeType, `${cssPrefix}-widget ${className}`);\n    } else {\n      super(className);\n    }\n    this.$$rootFlag = $$rootFlag;\n  }\n\n  /**\n   * 追加节点\n   * @param args[]\n   */\n  childrenNodes(...args) {\n    args.forEach((ele) => {\n      if (ele.parentWidget) {\n        ele.parentWidget(this);\n      }\n    });\n    return super.childrenNodes(...args);\n  }\n\n  /**\n   * 追加节点\n   * 触发onAttach事件\n   * @param widget\n   */\n  attach(widget) {\n    this.childrenNodes(widget);\n    widget.parentWidget(this);\n    widget.onAttach(this);\n  }\n\n  /**\n   * 追加节点\n   * @param widget\n   */\n  before(widget) {\n    widget.parentWidget(this);\n    return super.before(widget);\n  }\n\n  /**\n   * 追加节点\n   * @param widget\n   */\n  after(widget) {\n    widget.parentWidget(this);\n    return super.after(widget);\n  }\n\n  /**\n   * 解绑事件处理\n   */\n  unbind() {\n    XEvent.unbind(this);\n  }\n\n  /**\n   * 绑定处理事件\n   */\n  bind() {\n\n  }\n\n  /**\n   * 计算鼠标在当前\n   * 元素中的位置\n   * @param event\n   * @param elem\n   * @returns {{x: number, y: number}}\n   */\n  eventXy(event, elem = this) {\n    const { top, left } = elem.box();\n    return {\n      y: event.clientY - top,\n      x: event.clientX - left,\n    };\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy() {\n    this.unbind();\n    this.remove();\n  }\n\n  /**\n   * 查找最邻近\n   * 的class元素\n   * @param clazz\n   */\n  closestClass(clazz) {\n    let node = this;\n    while (!h(document.body).is(node)) {\n      if (node.hasClass(clazz)) {\n        return node;\n      }\n      node = node.parent();\n    }\n    return null;\n  }\n\n  /**\n   * 获取根节点box\n   */\n  getRootBox() {\n    return this.getRootWidget().box();\n  }\n\n  /**\n   * 获取相对于 root box的\n   * 元素box\n   * @returns {{top: number, left: number, width: number, height: number}}\n   */\n  relativeBox() {\n    const root = this.getRootWidget();\n    const thisBox = this.box();\n    const rootBox = root.box();\n    return {\n      right: rootBox.right - thisBox.right,\n      bottom: rootBox.bottom - thisBox.bottom,\n      top: thisBox.top - rootBox.top,\n      left: thisBox.left - rootBox.left,\n      width: thisBox.width,\n      height: thisBox.height,\n    };\n  }\n\n  /**\n   * 获取 root widget\n   */\n  getRootWidget() {\n    let parent = this.data('parent');\n    while (parent && !parent.$$rootFlag) {\n      parent = parent.data('parent');\n    }\n    return parent;\n  }\n\n  /**\n   * 设置 parent widget\n   * @param widget\n   */\n  parentWidget(widget) {\n    if (widget) {\n      this.data('parent', widget);\n      return this;\n    }\n    return this.data('parent');\n  }\n\n}\n\nconst w = (className = '', nodeType = 'div') => new Widget(className, nodeType);\n\nexport {\n  Widget,\n  w,\n};\n","import { Constant } from '../const/Constant';\nimport { Element } from './Element';\n\nclass BindPool {\n\n  constructor() {\n    this.pool = [];\n  }\n\n  unbind(ele, type, callback, option) {\n    if (ele instanceof Element) {\n      ele = ele.el;\n    }\n    const result = this.remove(ele, type, callback, option);\n    if (result.length) {\n      result.forEach((item) => {\n        ele.removeEventListener(item.type, item.callback, item.option);\n      });\n    } else {\n      ele.removeEventListener(type, callback, option);\n    }\n  }\n\n  bind(ele, type, callback, option) {\n    if (ele instanceof Element) {\n      ele = ele.el;\n    }\n    this.pool.push({\n      ele, type, callback, option,\n    });\n    ele.addEventListener(type, callback, option);\n  }\n\n  remove(ele, type = '*', callback = null, option = null) {\n    const pool = [];\n    const rem = [];\n    this.pool.forEach((item) => {\n      const eqElem = ele === item.ele;\n      const eqOpt = option === null || option === item.option;\n      const eqType = type === '*' || type === item.type;\n      const eqCall = callback === null || callback === item.callback;\n      if (eqElem && eqType && eqCall && eqOpt) {\n        rem.push(item);\n      } else {\n        pool.push(item);\n      }\n    });\n    this.pool = pool;\n    return rem;\n  }\n\n  multipleUnbind(eles, type, callback, option) {\n    eles.forEach((item) => {\n      this.unbind(item, type, callback, option);\n    });\n  }\n\n  multipleBind(eles, type, callback, option) {\n    eles.forEach((item) => {\n      this.bind(item, type, callback, option);\n    });\n  }\n\n}\n\nconst pool = new BindPool();\n\nclass XEvent {\n\n  static unbind(target, name, fn, option = false) {\n    if (Array.isArray(target)) {\n      pool.multipleUnbind(target, name, fn, option);\n    } else {\n      pool.unbind(target, name, fn, option);\n    }\n    return target;\n  }\n\n  static bind(target, name, fn, option = false) {\n    if (Array.isArray(target)) {\n      pool.multipleBind(target, name, fn, option);\n    } else {\n      pool.bind(target, name, fn, option);\n    }\n    return target;\n  }\n\n  static mouseHold(target, holdFunc = () => {}, endFunc = () => {}, time = 150) {\n    let handle = setInterval(() => {\n      holdFunc();\n    }, time);\n    let xEvtUp = (evt) => {\n      clearInterval(handle);\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\n      endFunc(evt);\n    };\n    holdFunc();\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\n  }\n\n  static mouseMoveUp(target, moveFunc = () => {}, upFunc = () => {}) {\n    const xEvtMove = (evt) => {\n      moveFunc(evt);\n      evt.stopPropagation();\n      evt.preventDefault();\n    };\n    const xEvtUp = (evt) => {\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\n      upFunc(evt);\n      evt.preventDefault();\n    };\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\n    return target;\n  }\n\n}\n\nXEvent.WrapFuncion = {\n  doubleClick: (callback) => {\n    let lastPageX = 0;\n    let lastPageY = 0;\n    let lastTime = 0;\n    return (event) => {\n      if (event.button === 2) {\n        lastPageX = 0;\n        lastTime = 0;\n        lastPageY = 0;\n        return;\n      }\n      const { pageX, pageY } = event;\n      const current = Date.now();\n      const diffTime = current - lastTime <= 300;\n      const diffPageX = pageX === lastPageX;\n      const diffPageY = pageY === lastPageY;\n      if (diffTime && diffPageX && diffPageY) {\n        callback(event);\n        lastTime = 0;\n        lastPageX = 0;\n        lastPageY = 0;\n      } else {\n        lastPageX = pageX;\n        lastPageY = pageY;\n        lastTime = current;\n      }\n    };\n  },\n  mouseClick: (callback) => (event) => {\n    callback(event);\n  },\n};\n\nexport {\n  XEvent,\n};\n","/* global document */\nimport { h } from '../../lib/Element';\nimport { cssPrefix, Constant } from '../../const/Constant';\nimport { Widget } from '../../lib/Widget';\nimport { DragPanel } from '../dragpanel/DragPanel';\nimport { XEvent } from '../../lib/XEvent';\nimport { SheetUtils } from '../../utils/SheetUtils';\n\nclass ColorPicker extends Widget {\n\n  constructor(options) {\n    super(`${cssPrefix}-color-picker`);\n    this.options = SheetUtils.copy({\n      selectCb: () => {},\n    }, options);\n    // 拖拽组件\n    this.dragPanel = new DragPanel().parentWidget(this);\n    this.color = [360, 0, 100];\n    // 头部\n    this.preViewColorPoint = h('div', `${cssPrefix}-color-picker-pre-view-color-point`);\n    this.colorValueTips = h('div', `${cssPrefix}-color-picker-color-value-tips`);\n    this.colorValueTips.text('十六进制颜色值');\n    this.colorInput = h('input', `${cssPrefix}-color-picker-color-input`);\n    this.top = h('div', `${cssPrefix}-color-picker-top`);\n    this.top.childrenNodes(this.preViewColorPoint);\n    this.top.childrenNodes(this.colorValueTips);\n    this.top.childrenNodes(this.colorInput);\n    // 中间部分\n    this.selectColorPoint = h('div', `${cssPrefix}-color-picker-select-color-point`);\n    this.selectColorArea1 = h('div', `${cssPrefix}-color-picker-select-color-area area1`);\n    this.selectColorArea2 = h('div', `${cssPrefix}-color-picker-select-color-area area2`);\n    this.selectColorArea3 = h('div', `${cssPrefix}-color-picker-select-color-area area3`);\n    this.center = h('div', `${cssPrefix}-color-picker-center`);\n    this.center.childrenNodes(this.selectColorArea1);\n    this.center.childrenNodes(this.selectColorArea2);\n    this.center.childrenNodes(this.selectColorArea3);\n    this.center.childrenNodes(this.selectColorPoint);\n    // 底部\n    this.colorHuxTips = h('div', `${cssPrefix}-color-picker-color-hux-tips`);\n    this.colorBar = h('div', `${cssPrefix}-color-picker-color-bar`);\n    this.colorBarPoint = h('div', `${cssPrefix}-color-picker-bar-point`);\n    this.bottom = h('div', `${cssPrefix}-color-picker-bottom`);\n    this.colorHuxTips.text('HUE');\n    this.colorBar.childrenNodes(this.colorBarPoint);\n    this.bottom.childrenNodes(this.colorHuxTips);\n    this.bottom.childrenNodes(this.colorBar);\n    // 按钮\n    this.cancelButton = h('div', `${cssPrefix}-color-picker-button cancel`);\n    this.selectButton = h('div', `${cssPrefix}-color-picker-button select`);\n    this.buttons = h('div', `${cssPrefix}-color-picker-buttons`);\n    this.cancelButton.text('取消');\n    this.selectButton.text('确定');\n    this.buttons.childrenNodes(this.selectButton);\n    this.buttons.childrenNodes(this.cancelButton);\n    this.childrenNodes(this.top);\n    this.childrenNodes(this.center);\n    this.childrenNodes(this.bottom);\n    this.childrenNodes(this.buttons);\n    this.dragPanel.childrenNodes(this);\n    this.dragPanel.css('background', '#ffffff');\n    this.bind();\n  }\n\n  unbind() {\n    const { selectColorPoint } = this;\n    const { colorBarPoint } = this;\n    const {\n      colorInput, cancelButton, selectButton,\n    } = this;\n    XEvent.unbind(colorInput);\n    XEvent.unbind(colorInput);\n    XEvent.unbind(colorBarPoint);\n    XEvent.unbind(selectColorPoint);\n    XEvent.unbind(cancelButton);\n    XEvent.unbind(selectButton);\n  }\n\n  bind() {\n    const { selectColorPoint, center } = this;\n    const { colorBarPoint, colorBar } = this;\n    const {\n      colorInput, cancelButton, selectButton,\n    } = this;\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\n      e1.stopPropagation();\n    });\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.CHANGE, () => {\n      const value = colorInput.val();\n      if (value) {\n        this.hexColor(value);\n      }\n    });\n    XEvent.bind(colorBarPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\n      const xy = this.eventXy(e1, colorBar);\n      const colorBarBox = colorBar.box();\n      if (xy.x < 0) xy.x = 0;\n      if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\n      this.downHue(xy.x, colorBarBox.width);\n      XEvent.mouseMoveUp(h(document), (e2) => {\n        const xy = this.eventXy(e2, colorBar);\n        const colorBarBox = colorBar.box();\n        if (xy.x < 0) xy.x = 0;\n        if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\n        this.moveHue(xy.x, colorBarBox.width);\n      });\n      e1.stopPropagation();\n    });\n    XEvent.bind(selectColorPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\n      const xy = this.eventXy(e1, center);\n      const centerBox = center.box();\n      if (xy.x < 0) xy.x = 0;\n      if (xy.x > centerBox.width) xy.x = centerBox.width;\n      if (xy.y < 0) xy.y = 0;\n      if (xy.y > centerBox.height) xy.y = centerBox.height;\n      this.downSelect(xy.x, xy.y, centerBox.width, centerBox.height);\n      XEvent.mouseMoveUp(h(document), (e2) => {\n        const xy = this.eventXy(e2, center);\n        if (xy.x < 0) xy.x = 0;\n        if (xy.x > centerBox.width) xy.x = centerBox.width;\n        if (xy.y < 0) xy.y = 0;\n        if (xy.y > centerBox.height) xy.y = centerBox.height;\n        this.moveSelect(xy.x, xy.y, centerBox.width, centerBox.height);\n      });\n      e1.stopPropagation();\n    });\n    XEvent.bind(cancelButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\n      this.close();\n    });\n    XEvent.bind(selectButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\n      const { color } = this;\n      const hsb = ColorPicker.fixHsx({\n        h: parseInt(color[0], 10),\n        s: parseInt(color[1], 10),\n        x: parseInt(color[2], 10),\n      });\n      const rgb = ColorPicker.hsbToRgb(hsb);\n      this.options.selectCb(`rgb(${rgb.r},${rgb.g},${rgb.b})`);\n      this.close();\n    });\n  }\n\n  open(hex) {\n    const { dragPanel } = this;\n    dragPanel.open();\n    if (hex) {\n      if (ColorPicker.isRgb(hex)) {\n        const rgb = ColorPicker.parseRgb(hex);\n        // eslint-disable-next-line no-param-reassign\n        hex = ColorPicker.rgbToHex(rgb);\n      }\n      this.hexColor(hex);\n    } else {\n      this.change();\n    }\n    return this;\n  }\n\n  close() {\n    const { dragPanel } = this;\n    dragPanel.close();\n    return this;\n  }\n\n  sliderPosition(hsb) {\n    // hue 滑块位置\n    const { colorBar, colorBarPoint } = this;\n    const colorBarPointBox = colorBarPoint.box();\n    const colorBarBox = colorBar.box();\n    let colorBarPointLeft = parseInt(colorBarBox.width - colorBarBox.width * hsb.h / 360, 10);\n    colorBarPointLeft -= colorBarPointBox.width / 2;\n    colorBarPoint.offset({\n      left: colorBarPointLeft,\n    });\n    // select color 滑块位置\n    const { center, selectColorPoint } = this;\n    const selectColorPointBox = selectColorPoint.box();\n    const centerBox = center.box();\n    let selectColorPointLeft = parseInt(centerBox.width * hsb.s / 100, 10);\n    let selectColorPointTop = parseInt(centerBox.height * (100 - hsb.x) / 100, 10);\n    selectColorPointLeft -= selectColorPointBox.width / 2;\n    selectColorPointTop -= selectColorPointBox.height / 2;\n    selectColorPoint.offset({\n      left: selectColorPointLeft,\n      top: selectColorPointTop,\n    });\n  }\n\n  hueChange() {\n    const { color } = this;\n    const hsb = ColorPicker.fixHsx({\n      h: parseInt(color[0], 10),\n      s: parseInt(color[1], 10),\n      x: parseInt(color[2], 10),\n    });\n    const {\n      colorBarPoint, selectColorPoint, preViewColorPoint, selectColorArea1, colorInput,\n    } = this;\n    const colorValue = ColorPicker.hsbToHex(hsb);\n    const areaColorValue = ColorPicker.hsbToHex({ h: hsb.h, s: 100, x: 100 });\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\n    colorBarPoint.css('backgroundColor', `#${areaColorValue}`);\n    selectColorArea1.css('backgroundColor', `#${areaColorValue}`);\n    colorInput.val(`#${colorValue}`);\n    this.sliderPosition(hsb);\n  }\n\n  selectChange() {\n    const { color } = this;\n    const hsb = ColorPicker.fixHsx({\n      h: parseInt(color[0], 10),\n      s: parseInt(color[1], 10),\n      x: parseInt(color[2], 10),\n    });\n    const { preViewColorPoint, selectColorPoint, colorInput } = this;\n    const colorValue = ColorPicker.hsbToHex(hsb);\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\n    colorInput.val(`#${colorValue}`);\n    this.sliderPosition(hsb);\n  }\n\n  change() {\n    this.hueChange();\n    this.selectChange();\n  }\n\n  downSelect(x, y, width, height) {\n    const { color } = this;\n    color[1] = parseInt(100 * x / width, 10);\n    color[2] = parseInt(100 * (height - y) / height, 10);\n    this.selectChange();\n  }\n\n  moveSelect(x, y, width, height) {\n    const { color } = this;\n    color[1] = parseInt(100 * (Math.max(0, Math.min(width, x))) / width, 10);\n    color[2] = parseInt(100 * (height - Math.max(0, Math.min(height, y))) / height, 10);\n    this.selectChange();\n  }\n\n  downHue(x, width) {\n    const { color } = this;\n    color[0] = parseInt(360 * (width - x) / width, 10);\n    this.hueChange();\n  }\n\n  moveHue(x, width) {\n    const { color } = this;\n    color[0] = parseInt(360 * (width - Math.max(0, Math.min(width, x))) / width, 10);\n    this.hueChange();\n  }\n\n  hexColor(hex) {\n    const { color } = this;\n    const result = ColorPicker.hexToHsb(ColorPicker.fixHex(hex));\n    color[0] = result.h;\n    color[1] = result.s;\n    color[2] = result.x;\n    this.change();\n  }\n\n  destroy() {\n    super.destroy();\n    this.unbind();\n    this.dragPanel.destroy();\n  }\n\n  static fixHex(hex) {\n    const len = 6 - hex.length;\n    if (len > 0) {\n      const o = [];\n      for (let i = 0; i < len; i += 1) {\n        o.push('0');\n      }\n      o.push(hex);\n      // eslint-disable-next-line no-param-reassign\n      hex = o.join('');\n    }\n    return hex;\n  }\n\n  static fixHsx(hsx) {\n    return {\n      h: Math.min(360, Math.max(0, hsx.h)),\n      s: Math.min(100, Math.max(0, hsx.s)),\n      x: Math.min(100, Math.max(0, hsx.x)),\n    };\n  }\n\n  static isRgb(rgb) {\n    return rgb.startsWith('rgb');\n  }\n\n  static isHex(hex) {\n    return hex.startsWith('#');\n  }\n\n  static isDark(rgb) {\n    if (SheetUtils.isString(rgb)) {\n      if (this.isHex(rgb)) {\n        const v = ColorPicker.hexToRgb(rgb);\n        rgb = `rgb(${v.r}, ${v.g}, ${v.b})`;\n      }\n      const result = ColorPicker.parseRgb(rgb);\n      const { r, g, b } = result;\n      return (r * 0.299) + (g * 0.578) + (b * 0.114) >= 192;\n    }\n    return false;\n  }\n\n  static hexToRgb(hex) {\n    // eslint-disable-next-line no-redeclare,no-param-reassign\n    hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n    // eslint-disable-next-line no-bitwise\n    return { r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF) };\n  }\n\n  static hexToHsb(hex) {\n    return this.rgbToHsb(this.hexToRgb(hex));\n  }\n\n  static rgbToHsb(rgb) {\n    const hsb = { h: 0, s: 0, x: 0 };\n    const min = Math.min(rgb.r, rgb.g, rgb.b);\n    const max = Math.max(rgb.r, rgb.g, rgb.b);\n    const delta = max - min;\n    hsb.x = max;\n    hsb.s = max !== 0 ? 255 * delta / max : 0;\n    if (hsb.s !== 0) {\n      if (rgb.r === max) hsb.h = (rgb.g - rgb.b) / delta;\n      else if (rgb.g === max) hsb.h = 2 + (rgb.b - rgb.r) / delta;\n      else hsb.h = 4 + (rgb.r - rgb.g) / delta;\n    } else hsb.h = -1;\n    hsb.h *= 60;\n    if (hsb.h < 0) hsb.h += 360;\n    hsb.s *= 100 / 255;\n    hsb.x *= 100 / 255;\n    return hsb;\n  }\n\n  static hsbToRgb(hsb) {\n    const rgb = {};\n    let { h } = hsb;\n    const s = hsb.s * 255 / 100;\n    const v = hsb.x * 255 / 100;\n    if (s === 0) {\n      rgb.r = v;\n      rgb.g = v;\n      rgb.b = v;\n    } else {\n      const t1 = v;\n      const t2 = (255 - s) * v / 255;\n      const t3 = (t1 - t2) * (h % 60) / 60;\n      if (h === 360) h = 0;\n      if (h < 60) {\n        rgb.r = t1;\n        rgb.b = t2;\n        rgb.g = t2 + t3;\n      } else if (h < 120) {\n        rgb.g = t1;\n        rgb.b = t2;\n        rgb.r = t1 - t3;\n      } else if (h < 180) {\n        rgb.g = t1;\n        rgb.r = t2;\n        rgb.b = t2 + t3;\n      } else if (h < 240) {\n        rgb.b = t1;\n        rgb.r = t2;\n        rgb.g = t1 - t3;\n      } else if (h < 300) {\n        rgb.b = t1;\n        rgb.g = t2;\n        rgb.r = t2 + t3;\n      } else if (h < 360) {\n        rgb.r = t1;\n        rgb.g = t2;\n        rgb.b = t1 - t3;\n      } else {\n        rgb.r = 0;\n        rgb.g = 0;\n        rgb.b = 0;\n      }\n    }\n    return { r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b) };\n  }\n\n  static rgbToHex(rgb) {\n    const hex = [\n      rgb.r.toString(16),\n      rgb.g.toString(16),\n      rgb.b.toString(16),\n    ];\n    hex.forEach((val, nr) => {\n      if (val.length === 1) {\n        hex[nr] = `0${val}`;\n      }\n    });\n    return hex.join('');\n  }\n\n  static hsbToHex(hsb) {\n    return this.rgbToHex(this.hsbToRgb(hsb));\n  }\n\n  static parseRgb(rgb) {\n    const rxp = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\n    const result = rgb.match(rxp);\n    return {\n      r: parseInt(result[1], 10),\n      g: parseInt(result[2], 10),\n      b: parseInt(result[3], 10),\n    };\n  }\n\n  static parseRgbToHex(rgb, defaultValue = null) {\n    if (rgb) {\n      if (this.isHex(rgb)) {\n        return rgb.substring(1);\n      }\n      const value = this.parseRgb(rgb);\n      return this.rgbToHex(value);\n    }\n    return defaultValue;\n  }\n\n  static parseHexToRgb(hex, defaultValue = null) {\n    if (hex) {\n      const rgb = ColorPicker.hexToRgb(hex);\n      return `rgb(${rgb.r},${rgb.g},${rgb.b})`;\n    }\n    return defaultValue;\n  }\n\n}\n\nexport { ColorPicker };\n","import { Widget } from '../../../lib/Widget';\nimport { cssPrefix, Constant } from '../../../const/Constant';\nimport { ColorItem } from './ColorItem';\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { XEvent } from '../../../lib/XEvent';\n\nclass ColorArray extends Widget {\n\n  constructor(options) {\n    super(`${cssPrefix}-color-array`);\n    this.options = SheetUtils.copy({\n      colors: [\n        new ColorItem({ color: 'rgb(0, 0, 0)' }),\n        new ColorItem({ color: 'rgb(67, 67, 67)' }),\n        new ColorItem({ color: 'rgb(102, 102, 102)' }),\n        new ColorItem({ color: 'rgb(153, 153, 153)' }),\n        new ColorItem({ color: 'rgb(183, 183, 183)' }),\n        new ColorItem({ color: 'rgb(204, 204, 204)' }),\n        new ColorItem({ color: 'rgb(217, 217, 217)' }),\n        new ColorItem({ color: 'rgb(239, 239, 239)' }),\n        new ColorItem({ color: 'rgb(255, 255, 255)' }),\n\n        new ColorItem({ color: 'rgb(152, 0, 0)' }),\n        new ColorItem({ color: 'rgb(255, 0, 0)' }),\n        new ColorItem({ color: 'rgb(255, 153, 0)' }),\n        new ColorItem({ color: 'rgb(255, 255, 0)' }),\n        new ColorItem({ color: 'rgb(0, 255, 0)' }),\n        new ColorItem({ color: 'rgb(0, 255, 255)' }),\n        new ColorItem({ color: 'rgb(74, 134, 232)' }),\n        new ColorItem({ color: 'rgb(0, 0, 255)' }),\n        new ColorItem({ color: 'rgb(153, 0, 255)' }),\n        new ColorItem({ color: 'rgb(255, 0, 255)' }),\n\n        new ColorItem({ color: 'rgb(230, 184, 175)' }),\n        new ColorItem({ color: 'rgb(244, 204, 204)' }),\n        new ColorItem({ color: 'rgb(252, 229, 205)' }),\n        new ColorItem({ color: 'rgb(255, 242, 204)' }),\n        new ColorItem({ color: 'rgb(217, 234, 211)' }),\n        new ColorItem({ color: 'rgb(208, 224, 227)' }),\n        new ColorItem({ color: 'rgb(201, 218, 248)' }),\n        new ColorItem({ color: 'rgb(207, 226, 243)' }),\n        new ColorItem({ color: 'rgb(217, 210, 233)' }),\n        new ColorItem({ color: 'rgb(234, 209, 220)' }),\n\n        new ColorItem({ color: 'rgb(221, 126, 107)' }),\n        new ColorItem({ color: 'rgb(234, 153, 153)' }),\n        new ColorItem({ color: 'rgb(249, 203, 156)' }),\n        new ColorItem({ color: 'rgb(255, 229, 153)' }),\n        new ColorItem({ color: 'rgb(182, 215, 168)' }),\n        new ColorItem({ color: 'rgb(162, 196, 201)' }),\n        new ColorItem({ color: 'rgb(164, 194, 244)' }),\n        new ColorItem({ color: 'rgb(159, 197, 232)' }),\n        new ColorItem({ color: 'rgb(180, 167, 214)' }),\n        new ColorItem({ color: 'rgb(213, 166, 189)' }),\n\n        new ColorItem({ color: 'rgb(204, 65, 37)' }),\n        new ColorItem({ color: 'rgb(224, 102, 102)' }),\n        new ColorItem({ color: 'rgb(246, 178, 107)' }),\n        new ColorItem({ color: 'rgb(255, 217, 102)' }),\n        new ColorItem({ color: 'rgb(147, 196, 125)' }),\n        new ColorItem({ color: 'rgb(118, 165, 175)' }),\n        new ColorItem({ color: 'rgb(109, 158, 235)' }),\n        new ColorItem({ color: 'rgb(111, 168, 220)' }),\n        new ColorItem({ color: 'rgb(142, 124, 195)' }),\n        new ColorItem({ color: 'rgb(194, 123, 160)' }),\n\n        new ColorItem({ color: 'rgb(166, 28, 0)' }),\n        new ColorItem({ color: 'rgb(204, 0, 0)' }),\n        new ColorItem({ color: 'rgb(230, 145, 56)' }),\n        new ColorItem({ color: 'rgb(241, 194, 50)' }),\n        new ColorItem({ color: 'rgb(106, 168, 79)' }),\n        new ColorItem({ color: 'rgb(69, 129, 142)' }),\n        new ColorItem({ color: 'rgb(60, 120, 216)' }),\n        new ColorItem({ color: 'rgb(61, 133, 198)' }),\n        new ColorItem({ color: 'rgb(103, 78, 167)' }),\n        new ColorItem({ color: 'rgb(166, 77, 121)' }),\n\n        new ColorItem({ color: 'rgb(133, 32, 12)' }),\n        new ColorItem({ color: 'rgb(153, 0, 0)' }),\n        new ColorItem({ color: 'rgb(180, 95, 6)' }),\n        new ColorItem({ color: 'rgb(191, 144, 0)' }),\n        new ColorItem({ color: 'rgb(56, 118, 29)' }),\n        new ColorItem({ color: 'rgb(19, 79, 92)' }),\n        new ColorItem({ color: 'rgb(17, 85, 204)' }),\n        new ColorItem({ color: 'rgb(11, 83, 148)' }),\n        new ColorItem({ color: 'rgb(53, 28, 117)' }),\n        new ColorItem({ color: 'rgb(116, 27, 71)' }),\n\n        new ColorItem({ color: 'rgb(91, 15, 0)' }),\n        new ColorItem({ color: 'rgb(102, 0, 0)' }),\n        new ColorItem({ color: 'rgb(120, 63, 4)' }),\n        new ColorItem({ color: 'rgb(127, 96, 0)' }),\n        new ColorItem({ color: 'rgb(39, 78, 19)' }),\n        new ColorItem({ color: 'rgb(12, 52, 61)' }),\n        new ColorItem({ color: 'rgb(28, 69, 135)' }),\n        new ColorItem({ color: 'rgb(7, 55, 99)' }),\n        new ColorItem({ color: 'rgb(32, 18, 77)' }),\n        new ColorItem({ color: 'rgb(76, 17, 48)' }),\n      ],\n      selectCb: () => {},\n    }, options);\n    this.colors = [];\n    this.activeColor = null;\n    this.options.colors.forEach((item) => {\n      this.add(item);\n    });\n    if (this.colors.length > 0) {\n      this.setActiveByColor(this.colors[0].options.color);\n    }\n  }\n\n  add(item) {\n    const find = this.colors.findIndex((color) => color.color === item.color);\n    if (find === -1) {\n      const { colors } = this;\n      colors.push(item);\n      this.childrenNodes(item);\n      this.bind(item);\n    }\n  }\n\n  unbind() {\n    this.colors.forEach((item) => {\n      XEvent.unbind(item);\n    });\n  }\n\n  bind(item) {\n    XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      this.options.selectCb(item);\n      if (item.options.color) {\n        this.setActiveByColor(item.options.color);\n      }\n    });\n  }\n\n  findItemByColor(color) {\n    color = SheetUtils.blankClear(color);\n    return this.colors.find((item) => item.color === color);\n  }\n\n  setActiveByColor(color) {\n    color = SheetUtils.blankClear(color);\n    this.colors.forEach((item) => {\n      if (item.color === color) {\n        item.setActive(true);\n        this.activeColor = item.color;\n      } else {\n        item.setActive(false);\n      }\n    });\n  }\n\n  clear() {\n    this.unbind();\n    this.colors = [];\n    this.empty();\n  }\n\n  destroy() {\n    super.destroy();\n    this.unbind();\n  }\n\n}\n\nColorArray.BLACK = 'rgb(0, 0, 0)';\nColorArray.NULL = null;\nColorArray.WHITE = 'rgb(255, 255, 255)';\n\nexport {\n  ColorArray,\n};\n","import { Widget } from '../../../lib/Widget';\nimport { cssPrefix } from '../../../const/Constant';\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { Icon } from '../../../core/work/head/tool/Icon';\nimport { ColorPicker } from '../ColorPicker';\n\nclass ColorItem extends Widget {\n\n  constructor(options) {\n    super(`${cssPrefix}-color-array-item`);\n    this.options = SheetUtils.copy({\n      color: null,\n      icon: null,\n    }, options);\n    this.icon = this.options.icon;\n    this.color = SheetUtils.blankClear(this.options.color);\n    if (this.icon) {\n      this.childrenNodes(this.options.icon);\n    }\n    if (this.color) {\n      this.css('backgroundColor', this.color);\n      if (ColorPicker.isDark(this.options.color)) {\n        this.checkedIcon = new Icon('checked-dark');\n        this.childrenNodes(this.checkedIcon);\n      } else {\n        this.checkedIcon = new Icon('checked-light');\n        this.childrenNodes(this.checkedIcon);\n      }\n      this.checkedIcon.hide();\n    }\n  }\n\n  setActive(active) {\n    if (this.checkedIcon) {\n      if (active) {\n        this.checkedIcon.show();\n      } else {\n        this.checkedIcon.hide();\n      }\n    }\n  }\n\n}\n\nexport { ColorItem };\n","/* global document */\nimport { Widget } from '../../lib/Widget';\nimport { cssPrefix, Constant } from '../../const/Constant';\nimport { XEvent } from '../../lib/XEvent';\n\nimport { h } from '../../lib/Element';\nimport { SheetUtils } from '../../utils/SheetUtils';\n\nlet instances = [];\n\n/**\n * DragPanel\n * @author jerry\n * @date 2020/10/19\n */\nclass DragPanel extends Widget {\n\n  /**\n   * DragPanel\n   * @param options\n   */\n  constructor(options) {\n    super(`${cssPrefix}-drag-panel`);\n    instances.push(this);\n    this.options = SheetUtils.copy({\n      position: DragPanel.DRAG_PANEL_POSITION.CENTER,\n    }, options);\n    this.status = false;\n    this.mask = h('div', `${cssPrefix}-drag-panel-mask`);\n    this.content = h('div', `${cssPrefix}-drag-panel-content`);\n    super.childrenNodes(this.content);\n    this.bind();\n  }\n\n  /**\n   * 显示弹框\n   */\n  open() {\n    const root = this.getRootWidget();\n    const { mask } = this;\n    if (this.status === false && root) {\n      this.status = true;\n      root.childrenNodes(mask);\n      root.childrenNodes(this);\n      this.dragPanelLocation();\n    }\n    return this;\n  }\n\n  /**\n   * 关闭弹框\n   */\n  close() {\n    const root = this.getRootWidget();\n    if (this.status === true && root) {\n      const { mask } = this;\n      this.status = false;\n      root.remove(this);\n      root.remove(mask);\n    }\n    return this;\n  }\n\n  /**\n   * 卸载事件\n   */\n  unbind() {\n    const { mask } = this;\n    XEvent.unbind(mask);\n  }\n\n  /**\n   * 绑定事件\n   */\n  bind() {\n    const { mask } = this;\n    XEvent.bind(mask, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\n      this.close();\n      evt1.stopPropagation();\n    });\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\n      if (evt1.button !== 0) {\n        return;\n      }\n      const root = this.getRootWidget();\n      const box = root.box();\n      const dxy = this.eventXy(evt1);\n      XEvent.mouseMoveUp(h(document), (evt2) => {\n        const top = evt2.pageY - box.top - dxy.y;\n        const left = evt2.pageX - box.left - dxy.x;\n        this.offset({\n          top, left,\n        });\n        evt2.stopPropagation();\n      });\n      evt1.stopPropagation();\n    });\n  }\n\n  /**\n   * 设置显示位置\n   */\n  dragPanelLocation() {\n    const root = this.getRootWidget();\n    const { options } = this;\n    const { position } = options;\n    const rootBox = root.box();\n    const elemBox = this.box();\n    switch (position) {\n      case DragPanel.DRAG_PANEL_POSITION.LEFT:\n        break;\n      case DragPanel.DRAG_PANEL_POSITION.RIGHT:\n        break;\n      case DragPanel.DRAG_PANEL_POSITION.TOP:\n        break;\n      case DragPanel.DRAG_PANEL_POSITION.CENTER:\n        this.offset({\n          left: rootBox.width / 2 - elemBox.width / 2,\n          top: rootBox.height / 2 - elemBox.height / 2,\n        });\n        break;\n      default: break;\n    }\n    return this;\n  }\n\n  /**\n   * 添加子元素\n   * @param args\n   * @returns {DragPanel}\n   */\n  childrenNodes(...args) {\n    this.content.childrenNodes(...args);\n    return this;\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy() {\n    super.destroy();\n    this.unbind();\n    DragPanel.removeInstance(this);\n  }\n\n  /**\n   * 删除实例\n   * @param instance\n   */\n  static removeInstance(instance) {\n    const filter = [];\n    instances.forEach((item) => {\n      if (item !== instance) {\n        filter.push(item);\n      }\n    });\n    instances = filter;\n  }\n\n  /**\n   * 关闭所有实例\n   * @param filter\n   */\n  static closeAll(filter = []) {\n    instances.forEach((item) => {\n      if (filter.indexOf(item) === -1) {\n        item.close();\n      }\n    });\n  }\n\n}\n\nDragPanel.DRAG_PANEL_POSITION = {\n  LEFT: 1,\n  TOP: 2,\n  RIGHT: 3,\n  CENTER: 4,\n};\n\nexport { DragPanel };\n","class DateUtils {\n\n  static dateFormat(fmt, date) {\n    if (!(date instanceof Date)) {\n      return date;\n    }\n    const o = {\n      'M+': date.getMonth() + 1,\n      'd+': date.getDate(),\n      'h+': date.getHours(),\n      'm+': date.getMinutes(),\n      's+': date.getSeconds(),\n      'q+': Math.floor((date.getMonth() + 3) / 3),\n      S: date.getMilliseconds(),\n    };\n    const reYear = /(y+)/;\n    const resultYear = reYear.exec(fmt);\n    if (resultYear) {\n      const yearFormatPart = resultYear[0];\n      const yearVal = (date.getFullYear().toString()).substr(4 - yearFormatPart.length);\n      fmt = fmt.replace(yearFormatPart, yearVal);\n    }\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\n    for (const k in o) {\n      const re = new RegExp(`(${k})`);\n      const res = re.exec(fmt);\n      if (res) {\n        const Val = o[k].toString();\n        const formatPart = res[0];\n        const replaceVal = (formatPart.length === 1) ? (Val) : ((`00${Val}`).substr(Val.length));\n        fmt = fmt.replace(formatPart, replaceVal);\n      }\n    }\n    return fmt;\n  }\n\n  static parse(text) {\n    let result = text;\n    if (result instanceof Date) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'yyyy/MM/dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'MM/dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'yyyy/MM/dd hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'yyyy-MM-dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'MM-dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'yyyy-MM-dd hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'yyyy年MM月');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'MM月dd日');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'yyyy年MM月dd日 hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    return text;\n  }\n\n  static parserToDate(dateText, format) {\n    if (!dateText) {\n      return null;\n    }\n    const defaultVal = new Date('1970/01/01 00:00:00');\n    const o = [{\n      reg: 'y+',\n    }, {\n      reg: 'M+',\n    }, {\n      reg: 'd+',\n    }, {\n      reg: 'h+',\n    }, {\n      reg: 'm+',\n    }, {\n      reg: 's+',\n    }, {\n      reg: 'S',\n    }];\n    let year = defaultVal.getFullYear();\n    let month = defaultVal.getMonth() + 1;\n    let day = defaultVal.getDate();\n    let hours = defaultVal.getHours();\n    let minutes = defaultVal.getMinutes();\n    let seconds = defaultVal.getSeconds();\n    let milliseconds = defaultVal.getMilliseconds();\n    let index = 1;\n    for (let j = 0; j < format.length; j += 1) {\n      const oneChar = format[j];\n      for (let i = 0; i < o.length; i += 1) {\n        const onePart = o[i];\n        const onePartReg = onePart.reg;\n        if (onePartReg[0] === oneChar) {\n          if (!onePart.index) {\n            onePart.index = index;\n            index += 1;\n          }\n          break;\n        }\n      }\n    }\n    for (let i = 0; i < o.length; i += 1) {\n      const onePart = o[i];\n      const onePartReg = onePart.reg;\n      const re = new RegExp(`(${onePartReg})`);\n      const res = re.exec(format);\n      if (res) {\n        const formatPart = res[0];\n        const replaceVal = `([0-9]{1,${formatPart.length}})`;\n        // eslint-disable-next-line no-param-reassign\n        format = format.replace(formatPart, replaceVal);\n      }\n    }\n    const dataInfo = {};\n    const re = new RegExp(format);\n    const res = re.exec(dateText);\n    if (res) {\n      for (let i = 1; i < res.length; i += 1) {\n        dataInfo[i] = res[i];\n      }\n    } else {\n      return null;\n    }\n    if (o[0].index) {\n      const { index } = o[0];\n      year = dataInfo[index];\n    }\n    if (o[1].index) {\n      const { index } = o[1];\n      month = dataInfo[index];\n    }\n    if (o[2].index) {\n      const { index } = o[2];\n      day = dataInfo[index];\n    }\n    if (o[3].index) {\n      const { index } = o[3];\n      hours = dataInfo[index];\n    }\n    if (o[4].index) {\n      const { index } = o[4];\n      minutes = dataInfo[index];\n    }\n    if (o[5].index) {\n      const { index } = o[5];\n      seconds = dataInfo[index];\n    }\n    if (o[6].index) {\n      const { index } = o[6];\n      milliseconds = dataInfo[index];\n    }\n    return new Date(year, month - 1, day, hours, minutes, seconds, milliseconds);\n  }\n\n}\n\nexport { DateUtils };\n","/* global navigator document window self */\nfunction S4() {\n  // eslint-disable-next-line no-bitwise\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n}\n\nconst alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nconst DATA_TYPE = {\n  String: 1,\n  Boolean: 2,\n  Number: 3,\n  Object: 4,\n  Array: 5,\n  Function: 6,\n  Null: 7,\n  Undefined: 8,\n  Promise: 9,\n  GeneratorFunction: 10,\n  AsyncFunction: 11,\n  BigInt: 12,\n  Symbol: 13,\n  DedicatedWorkerGlobalScope: 14,\n  Date: 15,\n  RegExp: 16,\n  Un: 0,\n};\n\nclass SheetUtils {\n\n  static isWindows() {\n    return /windows|win32/i.test(navigator.userAgent);\n  }\n\n  static isMac() {\n    return /macintosh|mac os x/i.test(navigator.userAgent);\n  }\n\n  static isNotEmptyObject(object) {\n    return !SheetUtils.isEmptyObject(object);\n  }\n\n  static isEmptyObject(object) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in object) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (object.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static isUnDef(e) {\n    return e === undefined || e === null;\n  }\n\n  static isDef(e) {\n    return !this.isUnDef(e);\n  }\n\n  static isNumber(e) {\n    return /^(-?\\d+.\\d+)$|^(-?\\d+)$/.test(e);\n  }\n\n  static isFraction(e) {\n    return /^\\d+\\/\\d+$/.test(e);\n  }\n\n  static isDate(e) {\n    return SheetUtils.type(e) === DATA_TYPE.Date;\n  }\n\n  static isFunction(e) {\n    const type = SheetUtils.type(e);\n    return type === DATA_TYPE.Function;\n  }\n\n  static isArray(e) {\n    return SheetUtils.type(e) === DATA_TYPE.Array;\n  }\n\n  static isObject(e) {\n    return SheetUtils.type(e) === DATA_TYPE.Object;\n  }\n\n  static isRegExp(e) {\n    return SheetUtils.type(e) === DATA_TYPE.EX;\n  }\n\n  static isLikeArray(e) {\n    if (SheetUtils.isUnDef(e)) {\n      return false;\n    }\n    return typeof e.length === 'number';\n  }\n\n  static isBlank(s) {\n    if (SheetUtils.isUnDef(s)) {\n      return true;\n    }\n    return s.toString().trim() === '';\n  }\n\n  static isPlainObject(obj) {\n    if (SheetUtils.isUnDef(obj)) {\n      return false;\n    }\n    return Object.getPrototypeOf(obj) === Object.getPrototypeOf({});\n  }\n\n  static isString(obj) {\n    return SheetUtils.type(obj) === DATA_TYPE.String;\n  }\n\n  static isChildType(obj, parent) {\n    return obj instanceof parent;\n  }\n\n  static toLowCase(str) {\n    return str.toLowerCase();\n  }\n\n  static type(arg) {\n    const type = Object.prototype.toString.call(arg);\n    switch (type) {\n      case '[object Null]':\n        return DATA_TYPE.Null;\n      case '[object Object]':\n        return DATA_TYPE.Object;\n      case '[object Undefined]':\n        return DATA_TYPE.Undefined;\n      case '[object String]':\n        return DATA_TYPE.String;\n      case '[object Boolean]':\n        return DATA_TYPE.Boolean;\n      case '[object Number]':\n        return DATA_TYPE.Number;\n      case '[object Function]':\n        return DATA_TYPE.Function;\n      case '[object Array]':\n        return DATA_TYPE.Array;\n      case '[object Promise]':\n        return DATA_TYPE.Promise;\n      case '[object GeneratorFunction]':\n        return DATA_TYPE.GeneratorFunction;\n      case '[object AsyncFunction]':\n        return DATA_TYPE.AsyncFunction;\n      case '[object BigInt]':\n        return DATA_TYPE.BigInt;\n      case '[object Symbol]':\n        return DATA_TYPE.Symbol;\n      case '[object Date]':\n        return DATA_TYPE.Date;\n      case '[object DedicatedWorkerGlobalScope]':\n        return DATA_TYPE.DedicatedWorkerGlobalScope;\n      default:\n        return DATA_TYPE.Un;\n    }\n  }\n\n  static copy(object = {}, ...sources) {\n    if (SheetUtils.isUnDef(object)) {\n      return {};\n    }\n    if (SheetUtils.isUnDef(sources) || sources.length === 0) {\n      return object;\n    }\n    sources.forEach((source) => {\n      if (SheetUtils.isUnDef(source)) return;\n      Object.keys(source).forEach((key) => {\n        const v = source[key];\n        if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n          object[key] = v;\n        } else if (typeof v !== 'function' && !Array.isArray(v) && SheetUtils.isPlainObject(v)) {\n          object[key] = object[key] || {};\n          SheetUtils.copy(object[key], v);\n        } else if (v) {\n          object[key] = v;\n        }\n      });\n    });\n    return object;\n  }\n\n  static cloneDeep(object) {\n    const json = JSON.stringify(object);\n    return JSON.parse(json);\n  }\n\n  static extends(target, ...src) {\n    for (let i = 0, len = src.length; i < len; i++) {\n      const item = src[i];\n      for (let key in item) {\n        if (item.hasOwnProperty(key)) {\n          const value = item[key];\n          if (SheetUtils.isDef(value)) {\n            target[key] = value;\n          }\n        }\n      }\n    }\n    return target;\n  }\n\n  static sum(objOrAry, cb = (value) => value) {\n    let total = 0;\n    let size = 0;\n    Object.keys(objOrAry).forEach((key) => {\n      total += cb(objOrAry[key], key);\n      size += 1;\n    });\n    return [total, size];\n  }\n\n  static parseFloat(val) {\n    if (SheetUtils.isNumber(val)) return parseFloat(val);\n    return 0;\n  }\n\n  static parseInt(val) {\n    if (SheetUtils.isNumber(val)) return parseInt(val, 10);\n    return 0;\n  }\n\n  static stringAt(index) {\n    let str = '';\n    let idx = index;\n    while (idx >= alphabets.length) {\n      idx /= alphabets.length;\n      idx -= 1;\n      str += alphabets[parseInt(idx, 10) % alphabets.length];\n    }\n    const last = index % alphabets.length;\n    str += alphabets[last];\n    return str;\n  }\n\n  static indexAt(str) {\n    let ret = 0;\n    for (let i = 0; i < str.length - 1; i += 1) {\n      const idx = str.charCodeAt(i) - 65;\n      const expoNet = str.length - 1 - i;\n      ret += (alphabets.length ** expoNet) + (alphabets.length * idx);\n    }\n    ret += str.charCodeAt(str.length - 1) - 65;\n    return ret;\n  }\n\n  static expr2xy(src) {\n    let x = '';\n    let y = '';\n    for (let i = 0; i < src.length; i += 1) {\n      if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\n        y += src.charAt(i);\n      } else {\n        x += src.charAt(i);\n      }\n    }\n    return [SheetUtils.indexAt(x), parseInt(y, 10) - 1];\n  }\n\n  static xy2expr(x, y) {\n    return `${SheetUtils.stringAt(x)}${y + 1}`;\n  }\n\n  static expr2expr(src, xn, yn) {\n    const [x, y] = SheetUtils.expr2xy(src);\n    return SheetUtils.xy2expr(x + xn, y + yn);\n  }\n\n  static minIf(v, min) {\n    if (v < min) return min;\n    return v;\n  }\n\n  static keepLastIndex(obj) {\n    const range = window.getSelection();\n    range.selectAllChildren(obj);\n    range.collapseToEnd();\n  }\n\n  static trim(s) {\n    if (this.isBlank(s)) return '';\n    return s.trim();\n  }\n\n  static now() {\n    return Date.now().toString();\n  }\n\n  static viewPort() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  static exitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    }\n  }\n\n  static fullScreen(element) {\n    if (element.el) {\n      element = element.el;\n    }\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n\n  static isFull() {\n    return !!(document.webkitIsFullScreen || document.mozFullScreen\n      || document.msFullscreenElement || document.fullscreenElement);\n  }\n\n  static uuid() {\n    return (`${S4() + S4()}${S4()}${S4()}${S4()}${S4()}${S4()}${S4()}`);\n  }\n\n  static equals(one, tow) {\n    function diffValue(oneValue, towValue) {\n      const oneType = SheetUtils.type(oneValue);\n      const towType = SheetUtils.type(towValue);\n      if (oneType !== towType) {\n        return false;\n      }\n      if (SheetUtils.isArray(oneValue)) {\n        return diffArrays(oneValue, towValue);\n      }\n      if (SheetUtils.isObject(oneValue)) {\n        return diffObject(oneValue, towValue);\n      }\n      if (SheetUtils.isDate(oneValue)) {\n        return oneValue.getTime() === towValue.getTime();\n      }\n      if (SheetUtils.isRegExp(oneValue)) {\n        return oneValue.toString() === towValue.toString();\n      }\n      return oneValue === towValue;\n    }\n    function diffArrays(one, tow) {\n      if (one.length !== tow.length) {\n        return false;\n      }\n      for (let i = 0, len = one.length; i < len; i++) {\n        const oneValue = one[i];\n        const towValue = tow[i];\n        if (!diffValue(oneValue, towValue)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    function diffObject(one, tow) {\n      const oneKeys = Object.keys(one);\n      const towKeys = Object.keys(tow);\n      if (oneKeys.length !== towKeys.length) {\n        return false;\n      }\n      for (const key of oneKeys) {\n        if (!towKeys.includes(key)) {\n          return false;\n        }\n        const oneValue = one[key];\n        const towValue = tow[key];\n        if (!diffValue(oneValue, towValue)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return diffValue(one, tow);\n  }\n\n  static toFixed(num, fixed) {\n    if (num.toString().indexOf('.') > -1) {\n      return num.toFixed(fixed);\n    }\n    return num;\n  }\n\n  static getExplorerInfo() {\n    const explorer = window.navigator.userAgent.toLowerCase();\n    // firefox\n    if (explorer.indexOf('firefox') >= 0) {\n      const ver = explorer.match(/firefox\\/([\\d.]+)/)[1];\n      return { type: 'Firefox', version: ver };\n    }\n    // Chrome\n    if (explorer.indexOf('chrome') >= 0) {\n      const ver = explorer.match(/chrome\\/([\\d.]+)/)[1];\n      return { type: 'Chrome', version: ver };\n    }\n    // Opera\n    if (explorer.indexOf('opera') >= 0) {\n      const ver = explorer.match(/opera.([\\d.]+)/)[1];\n      return { type: 'Opera', version: ver };\n    }\n    // Safari\n    if (explorer.indexOf('safari') >= 0) {\n      const ver = explorer.match(/version\\/([\\d.]+)/)[1];\n      return { type: 'Safari', version: ver };\n    }\n    // ie\n    if (explorer.indexOf('msie') >= 0) {\n      const ver = explorer.match(/msie ([\\d.]+)/)[1];\n      return { type: 'IE', version: ver };\n    }\n    // undefined\n    return undefined;\n  }\n\n  static arrayLast(array) {\n    return array[array.length - 1];\n  }\n\n  static arrayHead(array) {\n    return array[0];\n  }\n\n  static blankClear(value) {\n    if (SheetUtils.isString(value)) {\n      return value.replace(/\\s*/g, SheetUtils.EMPTY);\n    }\n    return value;\n  }\n\n  static newArray(array) {\n    if (array) {\n      return [].concat(array);\n    }\n    return [];\n  }\n\n  static safeValue(value, defaultValue = '') {\n    return SheetUtils.isUnDef(value) ? defaultValue : value;\n  }\n\n  static inWorker() {\n    // eslint-disable-next-line no-restricted-globals\n    const type = SheetUtils.type(self);\n    return type === DATA_TYPE.DedicatedWorkerGlobalScope;\n  }\n\n  static if(condition, establish, otherwise) {\n    return condition ? establish() : otherwise();\n  }\n\n  static slice(likeArray) {\n    return Array.prototype.slice.call(likeArray);\n  }\n\n  static clearBlank(str) {\n    return str ? str.replace(/\\s/g, '') : str;\n  }\n\n  static clearHideCode(str) {\n    let result = '';\n    for (let i = 0; i < str.length; i++) {\n      let value = str.charAt(i);\n      // 过滤掉 &#xFEFF; 隐藏字符串\n      // 服了 ！！！！！\n      let code = encodeURI(value);\n      if (code !== '%EF%BB%BF') {\n        result += value;\n      }\n    }\n    return result;\n  }\n\n}\n\nSheetUtils.EMPTY = '';\nSheetUtils.Nul = null;\nSheetUtils.Undef = undefined;\nSheetUtils.noop = () => {};\nSheetUtils.DATA_TYPE = DATA_TYPE;\n\nexport {\n  SheetUtils,\n};\n"],"names":["cssPrefix","Constant","CHANGE_ACTIVE","REMOVE_SHEET","MOUSE_MOVE","MOUSE_DOWN","CONTEXT_MENU","SCROLL","RESIZE","MOUSE_UP","INPUT","KEY_DOWN","KEY_UP","MOUSE_OVER","MOUSE_LEAVE","MOUSE_WHEEL","MOUSE_ENTER","CLICK","FOCUS","BLUR","DRAG_START","CHANGE","VISIBILITY_CHANGE","RENDER","SNAPSHOT_CHANGE","CHANGE_ROW_HEIGHT","CHANGE_COL_WIDTH","SCALE_CHANGE","EDIT_START","EDIT_INPUT","EDIT_FINISH","REMOVE_ROW","REMOVE_COL","ADD_NEW_ROW","ADD_NEW_COL","FIXED_CHANGE","FIXED_COL_CHANGE","FIXED_ROW_CHANGE","SELECT_OVER","SELECT_DOWN","SELECT_CHANGE","DATA_CHANGE","RESIZE_CHANGE","SEARCH_INPUT_CHANGE","PLAIN_INPUT_CHANGE","FORM_SELECT_CHANGE","format","default","value","this","text","number","fraction","left","split","right","eNotation","toExponential","decimal","indexOf","toString","substring","percentage","rmb","hk","dollar","time","result","date1","date2","date3","date4","date5","type","zIndexID","Border","static","constructor","widthType","width","color","zIndex","display","priority","border","origin","target","setColor","getZIndex","setDisplay","setType","setZIndex","setWidthType","clone","equal","Cell","borderAttr","fontAttr","richText","formula","background","custom","icons","ruler","contentWidth","contentHeight","contentType","TYPE","STRING","formatText","setContentType","setIcons","setText","setExpr","setRich","setRuler","setContentWidth","setContentHeight","setRichText","rich","expr","getExpr","setFormat","NUMBER","DATE_TIME","parse","RICH_TEXT","isEmpty","getComputeText","hasFormula","hasExpr","getFormatText","getValue","setFontAttr","attr","setBorderAttr","cloneStyle","toJSON","height","setTextWrap","textWrap","setFontColor","setRichFontColor","each","i","setFontSize","size","setRichFontSize","setFontBold","bold","setRichFontBold","setFontItalic","italic","setRichFontItalic","setFontName","name","setRichFontName","setUnderLine","underline","setRichUnderLine","setStrikeLine","strikeline","strikethrough","setRichStrikeLine","setFontAngle","angle","direction","updateMaxIndex","setFontDirection","setBackground","setFontAlign","align","setFontVerticalAlign","verticalAlign","CellBorder","bottom","top","hasDouble","isDisplay","setAllDisplay","setBDisplay","setLDisplay","setTDisplay","setRDisplay","setAllColor","setBColor","setLColor","setTColor","setRColor","setAllWidthType","setBWidthType","setLWidthType","setTWidthType","setRWidthType","setAllType","setBType","setLType","setTType","setRType","EMPTY","getInstance","config","CellFont","padding","like","other","keys1","Object","keys","keys2","key","includes","src","val","reset","equals","RichFont","scaleAdapter","plain","option","v","ignore","RichFonts","map","font","R","cb","forEach","getRich","push","hasLength","length","item1","item2","join","XIcon","instances","icon","vertical","ICON_VERTICAL","CENTER","horizontal","ICON_HORIZONTAL","RIGHT","ICON_TYPE","image","iconFocus","offset","x","y","onDraw","onLeave","onMove","onDown","onEnter","rect","position","iconHorizontal","iconVertical","iconOffsetX","iconOffsetY","iconWidth","iconHeight","rectX","rectY","rectWidth","rectHeight","px","py","LEFT","TOP","BOTTOM","loadImage","load","sync","Image","loadImg","complete","onload","onerror","console","error","draw","drawIcon","drawImage","drawCustom","positionRect","include","includeRect","crop","open","fillStyle","fillRect","close","eventHandle","native","location","inRectPosition","activate","ICON_EVENT_TYPE","includePoint","setActivate","setOnDraw","callback","setOnDown","setOnMove","setOnEnter","setOnLeave","setFocus","newInstances","XIconOffset","Icon","className","super","iconNameEl","h","childrenNodes","setWidth","css","setHeight","Crop","save","clip","beginPath","restore","LINE_TYPE","SOLID_LINE","DOTTED_LINE","POINT_LINE","DOUBLE_LINE","DoubleLine","spacing","leftShow","topShow","rightShow","bottomShow","iFMerge","iFMergeFirstRow","iFMergeLastRow","iFMergeFirstCol","iFMergeLastCol","handleExternal","sx","sy","ex","ey","row","col","pos","external","ifMerge","firstRow","lastRow","firstCol","lastCol","sTopLeftCorner","sTop","sBottom","eBottomLeftCorner","eBottom","eTop","sLeft","sRight","eTopRightCorner","eRight","eLeft","sTopRightCorner","eBottomRightCorner","sBottomLeftCorner","handleInternal","internal","horizonLine","setLineColor","setLineWidthType","setLineDash","verticalLine","tiltingLine","Rect","disjoint","expandSize","DPR","devicePixelRatio","LINE_WIDTH_LOW","Math","round","LINE_WIDTH_MEDIUM","LINE_WIDTH_HIGH","LINE_PIXEL_OFFSET","Base","dpr","srcPx","stylePx","ceil","trunc","PI","canvas","ctx","getContext","options","hasOwnProperty","String","trim","resize","style","Wrapping","dash","measureText","fill","scale","translate","rotate","deg","Extends","polyStroke","interpolation","xys","moveTo","len","lineTo","stroke","polyInFill","fullRect","radian","Position","offsetX","offsetY","getOffsetX","getOffsetY","fillText","TypeError","BaseLine","line","linePx","pixel","lineWidth","CorsLine","LINE_WIDTH_TYPE","medium","low","high","lineWidthType","lineColor","corsLine","strokeStyle","XDraw","fillPath","path","points","w","copyImage","sw","sh","tx","ty","tw","th","el","BaseFont","getAlignPadding","ALIGN","center","getVerticalAlignPadding","VERTICAL_ALIGN","TEXT_WRAP","OVER_FLOW","WORD_WRAP","TRUNCATE","TEXT_DIRECTION","HORIZONTAL","VERTICAL","ANGLE","ANGLE_BAR","DEFAULT_FONT_ATTR","DEFAULT_RICH_ATTR","DEFAULT_RICH_ITEM_ATTR","Functions","functions","remove","getFunction","toLocaleString","register","func","Assembly","assembly","getInstruct","endsWith","writeOperand","writeOperator","op","writeString","writeNumber","Tokenizer","syntaxCheck","lexical","input","OPERATOR","NUMBERS","SPACE","LETTERS","bracketsStack","current","tokens","char","test","next","last","brackets","pop","syntax","sQuotesStack","dQuotesStack","callStack","arrayStack","ignoreArray","token","ignoreFunc","skipIgnoreToken","dir","index","checkArray","local","checkValue","checkOperator","checkFunction","Compiler","writer","groupStack","opIf","opAdd","opMul","opCommon","opRel","opNew","array","opCell","function","eofToken","nextToken","backToken","reduceGroup","increaseGroup","popGroup","addGroup","isSkipNextToken","compile","compileIfge","compileAdd","operator","compileMul","compileCommon","compileRel","compileArray","compileFunction","compilePushValue","Evaluation","instruct","memory","eval","newArray","invoke","pushSRegexp","pushNRegexp","pushORegexp","ificmpge","ificmpgt","ifge","ifgt","ifeq","ifne","add","sub","mul","div","mod","power","rel","link","uni","common","group","pushS","pushN","pushO","parseFloat","b","a","item","reverse","apply","Compile","startsWith","tokenizer","Instruct","inst","Formula","content","Element","object","HTMLCollection","NodeList","elements","document","createTextNode","replace","toLowerCase","tag","createElement","data","undefined","children","args","arguments","wrapElement","ele","append","childNodes","childrenNodesAppend","isTextNode","childrenNodesPrepend","prepend","k","offsetTop","offsetLeft","offsetHeight","offsetWidth","parent","parentNode","addClass","classList","hasClass","contains","hasChildElement","hasChild","removeClass","box","getBoundingClientRect","first","firstChild","lastChild","firstTextNode","find","handle","elem","lastTextNode","removeChild","prev","previousSibling","nextSibling","active","flag","cls","nodeValue","innerText","html","innerHTML","focus","blur","removeAttr","removeAttribute","setAttribute","getAttribute","get","cssRemoveKeys","removeProperty","hyphenateRE","cssRemoveVal","property","newValue","getPropertyValue","setProperty","computedStyle","window","getComputedStyle","show","hide","trigger","message","evt","MouseEvent","detail","bubbles","cancelable","initEvent","dispatchEvent","CustomEvent","select","querySelectorAll","finds","sibling","previousElementSibling","nextElementSibling","tagName","nodeName","toLocaleLowerCase","nodeType","after","before","cloneNode","empty","is","isBreakNode","isDocumentFragment","DocumentFragment","Life","onAttach","Widget","$$rootFlag","parentWidget","attach","widget","unbind","bind","eventXy","event","clientY","clientX","destroy","closestClass","clazz","node","body","getRootBox","getRootWidget","relativeBox","root","thisBox","rootBox","pool","removeEventListener","addEventListener","rem","eqElem","eqOpt","eqType","eqCall","multipleUnbind","eles","multipleBind","XEvent","fn","Array","isArray","holdFunc","endFunc","setInterval","xEvtUp","clearInterval","moveFunc","upFunc","xEvtMove","stopPropagation","preventDefault","WrapFuncion","doubleClick","lastPageX","lastPageY","lastTime","button","pageX","pageY","Date","now","mouseClick","ColorPicker","selectCb","dragPanel","preViewColorPoint","colorValueTips","colorInput","selectColorPoint","selectColorArea1","selectColorArea2","selectColorArea3","colorHuxTips","colorBar","colorBarPoint","cancelButton","selectButton","buttons","e1","hexColor","xy","colorBarBox","downHue","e2","moveHue","centerBox","downSelect","moveSelect","hsb","fixHsx","parseInt","s","rgb","hsbToRgb","r","g","hex","isRgb","parseRgb","rgbToHex","change","sliderPosition","colorBarPointBox","colorBarPointLeft","selectColorPointBox","selectColorPointLeft","selectColorPointTop","hueChange","colorValue","hsbToHex","areaColorValue","selectChange","max","min","hexToHsb","fixHex","o","hsx","isHex","hexToRgb","rgbToHsb","delta","t1","t2","t3","nr","match","defaultValue","ColorArray","colors","activeColor","setActiveByColor","findIndex","findItemByColor","setActive","clear","BLACK","NULL","WHITE","ColorItem","checkedIcon","DragPanel","DRAG_PANEL_POSITION","status","mask","dragPanelLocation","evt1","dxy","evt2","elemBox","removeInstance","instance","filter","DateUtils","fmt","date","getMonth","getDate","getHours","getMinutes","getSeconds","floor","S","getMilliseconds","resultYear","exec","yearFormatPart","yearVal","getFullYear","substr","res","RegExp","Val","formatPart","replaceVal","parserToDate","dateText","defaultVal","reg","year","month","day","hours","minutes","seconds","milliseconds","j","oneChar","onePart","onePartReg","dataInfo","S4","random","alphabets","DATA_TYPE","Boolean","Number","Function","Null","Undefined","Promise","GeneratorFunction","AsyncFunction","BigInt","Symbol","DedicatedWorkerGlobalScope","Un","SheetUtils","navigator","userAgent","isEmptyObject","e","isUnDef","EX","obj","getPrototypeOf","str","arg","prototype","call","sources","source","isPlainObject","copy","json","JSON","stringify","isDef","objOrAry","total","isNumber","idx","ret","charCodeAt","expoNet","charAt","indexAt","stringAt","xn","yn","expr2xy","xy2expr","range","getSelection","selectAllChildren","collapseToEnd","isBlank","innerWidth","innerHeight","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","element","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","one","tow","diffValue","oneValue","towValue","diffArrays","isObject","oneKeys","towKeys","diffObject","isDate","getTime","isRegExp","num","fixed","toFixed","explorer","version","isString","concat","self","condition","establish","otherwise","likeArray","slice","encodeURI","Nul","Undef","noop"],"sourceRoot":""}